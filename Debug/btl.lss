
btl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e3a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000e3a  00000eae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000eb6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ee8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000f24  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009d5  00000000  00000000  00000f74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000070c  00000000  00000000  00001949  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004f3  00000000  00000000  00002055  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000118  00000000  00000000  00002548  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004cc  00000000  00000000  00002660  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000642  00000000  00000000  00002b2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000316e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__ctors_end>
   4:	0c 94 b0 01 	jmp	0x360	; 0x360 <__vector_1>
   8:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
   c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  10:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  14:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  18:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  1c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  20:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  24:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  28:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  2c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  30:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  34:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  38:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  3c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  40:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  44:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  48:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  4c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  50:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__bad_interrupt>
  54:	36 01       	movw	r6, r12
  56:	33 01       	movw	r6, r6
  58:	41 01       	movw	r8, r2
  5a:	15 01       	movw	r2, r10
  5c:	18 01       	movw	r2, r16
  5e:	1b 01       	movw	r2, r22
  60:	1e 01       	movw	r2, r28
  62:	21 01       	movw	r4, r2
  64:	24 01       	movw	r4, r8
  66:	27 01       	movw	r4, r14
  68:	2a 01       	movw	r4, r20
  6a:	2d 01       	movw	r4, r26
  6c:	30 01       	movw	r6, r0
  6e:	41 01       	movw	r8, r2
  70:	41 01       	movw	r8, r2
  72:	41 01       	movw	r8, r2
  74:	41 01       	movw	r8, r2
  76:	41 01       	movw	r8, r2
  78:	41 01       	movw	r8, r2
  7a:	41 01       	movw	r8, r2
  7c:	41 01       	movw	r8, r2
  7e:	41 01       	movw	r8, r2
  80:	41 01       	movw	r8, r2
  82:	41 01       	movw	r8, r2
  84:	3c 01       	movw	r6, r24
  86:	41 01       	movw	r8, r2
  88:	41 01       	movw	r8, r2
  8a:	39 01       	movw	r6, r18
  8c:	41 01       	movw	r8, r2
  8e:	41 01       	movw	r8, r2
  90:	41 01       	movw	r8, r2
  92:	3f 01       	movw	r6, r30

00000094 <__trampolines_end>:
  94:	00 40       	sbci	r16, 0x00	; 0
  96:	7a 10       	cpse	r7, r10
  98:	f3 5a       	subi	r31, 0xA3	; 163
  9a:	00 a0       	ldd	r0, Z+32	; 0x20
  9c:	72 4e       	sbci	r23, 0xE2	; 226
  9e:	18 09       	sbc	r17, r8
  a0:	00 10       	cpse	r0, r0
  a2:	a5 d4       	rcall	.+2378   	; 0x9ee <dtoa_prf+0x8a>
  a4:	e8 00       	.word	0x00e8	; ????
  a6:	00 e8       	ldi	r16, 0x80	; 128
  a8:	76 48       	sbci	r23, 0x86	; 134
  aa:	17 00       	.word	0x0017	; ????
  ac:	00 e4       	ldi	r16, 0x40	; 64
  ae:	0b 54       	subi	r16, 0x4B	; 75
  b0:	02 00       	.word	0x0002	; ????
  b2:	00 ca       	rjmp	.-3072   	; 0xfffff4b4 <__eeprom_end+0xff7ef4b4>
  b4:	9a 3b       	cpi	r25, 0xBA	; 186
  b6:	00 00       	nop
  b8:	00 e1       	ldi	r16, 0x10	; 16
  ba:	f5 05       	cpc	r31, r5
  bc:	00 00       	nop
  be:	80 96       	adiw	r24, 0x20	; 32
  c0:	98 00       	.word	0x0098	; ????
  c2:	00 00       	nop
  c4:	40 42       	sbci	r20, 0x20	; 32
  c6:	0f 00       	.word	0x000f	; ????
  c8:	00 00       	nop
  ca:	a0 86       	std	Z+8, r10	; 0x08
  cc:	01 00       	.word	0x0001	; ????
  ce:	00 00       	nop
  d0:	10 27       	eor	r17, r16
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	e8 03       	fmulsu	r22, r16
  d8:	00 00       	nop
  da:	00 00       	nop
  dc:	64 00       	.word	0x0064	; ????
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	0a 00       	.word	0x000a	; ????
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	01 00       	.word	0x0001	; ????
  ea:	00 00       	nop
  ec:	00 00       	nop
  ee:	2c 76       	andi	r18, 0x6C	; 108
  f0:	d8 88       	ldd	r13, Y+16	; 0x10
  f2:	dc 67       	ori	r29, 0x7C	; 124
  f4:	4f 08       	sbc	r4, r15
  f6:	23 df       	rcall	.-442    	; 0xffffff3e <__eeprom_end+0xff7eff3e>
  f8:	c1 df       	rcall	.-126    	; 0x7c <__SREG__+0x3d>
  fa:	ae 59       	subi	r26, 0x9E	; 158
  fc:	e1 b1       	in	r30, 0x01	; 1
  fe:	b7 96       	adiw	r30, 0x27	; 39
 100:	e5 e3       	ldi	r30, 0x35	; 53
 102:	e4 53       	subi	r30, 0x34	; 52
 104:	c6 3a       	cpi	r28, 0xA6	; 166
 106:	e6 51       	subi	r30, 0x16	; 22
 108:	99 76       	andi	r25, 0x69	; 105
 10a:	96 e8       	ldi	r25, 0x86	; 134
 10c:	e6 c2       	rjmp	.+1484   	; 0x6da <__floatsisf+0x6>
 10e:	84 26       	eor	r8, r20
 110:	eb 89       	ldd	r30, Y+19	; 0x13
 112:	8c 9b       	sbis	0x11, 4	; 17
 114:	62 ed       	ldi	r22, 0xD2	; 210
 116:	40 7c       	andi	r20, 0xC0	; 192
 118:	6f fc       	.word	0xfc6f	; ????
 11a:	ef bc       	out	0x2f, r14	; 47
 11c:	9c 9f       	mul	r25, r28
 11e:	40 f2       	brcs	.-112    	; 0xb0 <__trampolines_end+0x1c>
 120:	ba a5       	ldd	r27, Y+42	; 0x2a
 122:	6f a5       	ldd	r22, Y+47	; 0x2f
 124:	f4 90       	lpm	r15, Z
 126:	05 5a       	subi	r16, 0xA5	; 165
 128:	2a f7       	brpl	.-54     	; 0xf4 <__trampolines_end+0x60>
 12a:	5c 93       	st	X, r21
 12c:	6b 6c       	ori	r22, 0xCB	; 203
 12e:	f9 67       	ori	r31, 0x79	; 121
 130:	6d c1       	rjmp	.+730    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 132:	1b fc       	.word	0xfc1b	; ????
 134:	e0 e4       	ldi	r30, 0x40	; 64
 136:	0d 47       	sbci	r16, 0x7D	; 125
 138:	fe f5       	brtc	.+126    	; 0x1b8 <__bad_interrupt>
 13a:	20 e6       	ldi	r18, 0x60	; 96
 13c:	b5 00       	.word	0x00b5	; ????
 13e:	d0 ed       	ldi	r29, 0xD0	; 208
 140:	90 2e       	mov	r9, r16
 142:	03 00       	.word	0x0003	; ????
 144:	94 35       	cpi	r25, 0x54	; 84
 146:	77 05       	cpc	r23, r7
 148:	00 80       	ld	r0, Z
 14a:	84 1e       	adc	r8, r20
 14c:	08 00       	.word	0x0008	; ????
 14e:	00 20       	and	r0, r0
 150:	4e 0a       	sbc	r4, r30
 152:	00 00       	nop
 154:	00 c8       	rjmp	.-4096   	; 0xfffff156 <__eeprom_end+0xff7ef156>
 156:	0c 33       	cpi	r16, 0x3C	; 60
 158:	33 33       	cpi	r19, 0x33	; 51
 15a:	33 0f       	add	r19, r19
 15c:	98 6e       	ori	r25, 0xE8	; 232
 15e:	12 83       	std	Z+2, r17	; 0x02
 160:	11 41       	sbci	r17, 0x11	; 17
 162:	ef 8d       	ldd	r30, Y+31	; 0x1f
 164:	21 14       	cp	r2, r1
 166:	89 3b       	cpi	r24, 0xB9	; 185
 168:	e6 55       	subi	r30, 0x56	; 86
 16a:	16 cf       	rjmp	.-468    	; 0xffffff98 <__eeprom_end+0xff7eff98>
 16c:	fe e6       	ldi	r31, 0x6E	; 110
 16e:	db 18       	sub	r13, r11
 170:	d1 84       	ldd	r13, Z+9	; 0x09
 172:	4b 38       	cpi	r20, 0x8B	; 139
 174:	1b f7       	brvc	.-58     	; 0x13c <__trampolines_end+0xa8>
 176:	7c 1d       	adc	r23, r12
 178:	90 1d       	adc	r25, r0
 17a:	a4 bb       	out	0x14, r26	; 20
 17c:	e4 24       	eor	r14, r4
 17e:	20 32       	cpi	r18, 0x20	; 32
 180:	84 72       	andi	r24, 0x24	; 36
 182:	5e 22       	and	r5, r30
 184:	81 00       	.word	0x0081	; ????
 186:	c9 f1       	breq	.+114    	; 0x1fa <_Z15_print_7Segmentci+0x32>
 188:	24 ec       	ldi	r18, 0xC4	; 196
 18a:	a1 e5       	ldi	r26, 0x51	; 81
 18c:	3d 27       	eor	r19, r29

0000018e <__ctors_end>:
 18e:	11 24       	eor	r1, r1
 190:	1f be       	out	0x3f, r1	; 63
 192:	cf e5       	ldi	r28, 0x5F	; 95
 194:	d4 e0       	ldi	r29, 0x04	; 4
 196:	de bf       	out	0x3e, r29	; 62
 198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
 19a:	10 e0       	ldi	r17, 0x00	; 0
 19c:	a0 e6       	ldi	r26, 0x60	; 96
 19e:	b0 e0       	ldi	r27, 0x00	; 0
 1a0:	ea e3       	ldi	r30, 0x3A	; 58
 1a2:	fe e0       	ldi	r31, 0x0E	; 14
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x10>
 1a6:	05 90       	lpm	r0, Z+
 1a8:	0d 92       	st	X+, r0
 1aa:	a8 36       	cpi	r26, 0x68	; 104
 1ac:	b1 07       	cpc	r27, r17
 1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0xc>
 1b0:	0e 94 22 02 	call	0x444	; 0x444 <main>
 1b4:	0c 94 1b 07 	jmp	0xe36	; 0xe36 <_exit>

000001b8 <__bad_interrupt>:
 1b8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001bc <_Z9_LED_initv>:
void printString(char[]);

void _LED_init()
{
	//port c is gonna be light controller
	DDRC = 0xFF;	//set all of port C to input mode (to let it sink current into the IC)
 1bc:	8f ef       	ldi	r24, 0xFF	; 255
 1be:	84 bb       	out	0x14, r24	; 20
	PORTC = 0xFF;	//set all portC to HIGH pull-up
 1c0:	85 bb       	out	0x15, r24	; 21
	
	//port D is for choosing which number to show
	DDRD = 0xF0;	// set half of port D to output mode
 1c2:	80 ef       	ldi	r24, 0xF0	; 240
 1c4:	81 bb       	out	0x11, r24	; 17
 1c6:	08 95       	ret

000001c8 <_Z15_print_7Segmentci>:
		}
	}
}

void _print_7Segment(char character, int position)
{
 1c8:	e8 2f       	mov	r30, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ca:	2f ef       	ldi	r18, 0xFF	; 255
 1cc:	80 e7       	ldi	r24, 0x70	; 112
 1ce:	92 e0       	ldi	r25, 0x02	; 2
 1d0:	21 50       	subi	r18, 0x01	; 1
 1d2:	80 40       	sbci	r24, 0x00	; 0
 1d4:	90 40       	sbci	r25, 0x00	; 0
 1d6:	e1 f7       	brne	.-8      	; 0x1d0 <_Z15_print_7Segmentci+0x8>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <_Z15_print_7Segmentci+0x12>
 1da:	00 00       	nop
	#ifdef _DEBUG
	_delay_ms(100);
	#endif // _DEBUG
	
	//reset the 2 ports
	PORTC = 0xFF;
 1dc:	8f ef       	ldi	r24, 0xFF	; 255
 1de:	85 bb       	out	0x15, r24	; 21
	PORTD = 0x00;
 1e0:	12 ba       	out	0x12, r1	; 18
	//print in which position
	switch (position)
 1e2:	61 30       	cpi	r22, 0x01	; 1
 1e4:	71 05       	cpc	r23, r1
 1e6:	71 f0       	breq	.+28     	; 0x204 <_Z15_print_7Segmentci+0x3c>
 1e8:	1c f4       	brge	.+6      	; 0x1f0 <_Z15_print_7Segmentci+0x28>
 1ea:	67 2b       	or	r22, r23
 1ec:	41 f0       	breq	.+16     	; 0x1fe <_Z15_print_7Segmentci+0x36>
 1ee:	08 95       	ret
 1f0:	62 30       	cpi	r22, 0x02	; 2
 1f2:	71 05       	cpc	r23, r1
 1f4:	51 f0       	breq	.+20     	; 0x20a <_Z15_print_7Segmentci+0x42>
 1f6:	63 30       	cpi	r22, 0x03	; 3
 1f8:	71 05       	cpc	r23, r1
 1fa:	51 f0       	breq	.+20     	; 0x210 <_Z15_print_7Segmentci+0x48>
 1fc:	08 95       	ret
	{
		case 0:
		PORTD = 0b11100000;
 1fe:	80 ee       	ldi	r24, 0xE0	; 224
 200:	82 bb       	out	0x12, r24	; 18
		break;
 202:	08 c0       	rjmp	.+16     	; 0x214 <_Z15_print_7Segmentci+0x4c>
		case 1:
		PORTD = 0b11010000;
 204:	80 ed       	ldi	r24, 0xD0	; 208
 206:	82 bb       	out	0x12, r24	; 18
		break;
 208:	05 c0       	rjmp	.+10     	; 0x214 <_Z15_print_7Segmentci+0x4c>
		case 2:
		PORTD = 0b10110000;
 20a:	80 eb       	ldi	r24, 0xB0	; 176
 20c:	82 bb       	out	0x12, r24	; 18
		break;
 20e:	02 c0       	rjmp	.+4      	; 0x214 <_Z15_print_7Segmentci+0x4c>
		case 3:
		PORTD = 0b01110000;
 210:	80 e7       	ldi	r24, 0x70	; 112
 212:	82 bb       	out	0x12, r24	; 18
		default:
		return;
	}
	
	//print what character
	switch(character)
 214:	8e 2f       	mov	r24, r30
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	fc 01       	movw	r30, r24
 21a:	bd 97       	sbiw	r30, 0x2d	; 45
 21c:	e0 32       	cpi	r30, 0x20	; 32
 21e:	f1 05       	cpc	r31, r1
 220:	80 f5       	brcc	.+96     	; 0x282 <_Z15_print_7Segmentci+0xba>
 222:	e6 5d       	subi	r30, 0xD6	; 214
 224:	ff 4f       	sbci	r31, 0xFF	; 255
 226:	0c 94 8c 04 	jmp	0x918	; 0x918 <__tablejump2__>
	{
		case '0':
		PORTC = 0b11000000;
 22a:	80 ec       	ldi	r24, 0xC0	; 192
 22c:	85 bb       	out	0x15, r24	; 21
		break;
 22e:	08 95       	ret
		
		case '1':
		PORTC = 0b11111001;
 230:	89 ef       	ldi	r24, 0xF9	; 249
 232:	85 bb       	out	0x15, r24	; 21
		break;
 234:	08 95       	ret
		
		case '2':
		PORTC = 0b10100100;
 236:	84 ea       	ldi	r24, 0xA4	; 164
 238:	85 bb       	out	0x15, r24	; 21
		break;
 23a:	08 95       	ret
		
		case '3':
		PORTC = 0b10110000;
 23c:	80 eb       	ldi	r24, 0xB0	; 176
 23e:	85 bb       	out	0x15, r24	; 21
		break;
 240:	08 95       	ret
		
		case '4':
		PORTC = 0b10011001;
 242:	89 e9       	ldi	r24, 0x99	; 153
 244:	85 bb       	out	0x15, r24	; 21
		break;
 246:	08 95       	ret
		
		case '5':
		PORTC = 0b10010010;
 248:	82 e9       	ldi	r24, 0x92	; 146
 24a:	85 bb       	out	0x15, r24	; 21
		break;
 24c:	08 95       	ret
		
		case '6':
		PORTC = 0b10000010;
 24e:	82 e8       	ldi	r24, 0x82	; 130
 250:	85 bb       	out	0x15, r24	; 21
		break;
 252:	08 95       	ret
		
		case '7':
		PORTC = 0b11111000;
 254:	88 ef       	ldi	r24, 0xF8	; 248
 256:	85 bb       	out	0x15, r24	; 21
		break;
 258:	08 95       	ret
		
		case '8':
		PORTC = ~0b01111111;
 25a:	80 e8       	ldi	r24, 0x80	; 128
 25c:	85 bb       	out	0x15, r24	; 21
		break;
 25e:	08 95       	ret
		
		case '9':
		PORTC = ~0b01101111;
 260:	80 e9       	ldi	r24, 0x90	; 144
 262:	85 bb       	out	0x15, r24	; 21
		break;
 264:	08 95       	ret
		
		case '.':
		PORTC = 0b01111111;
 266:	8f e7       	ldi	r24, 0x7F	; 127
 268:	85 bb       	out	0x15, r24	; 21
		break;
 26a:	08 95       	ret
		
		case '-':
		PORTC = ~0b01000000;
 26c:	8f eb       	ldi	r24, 0xBF	; 191
 26e:	85 bb       	out	0x15, r24	; 21
		break;
 270:	08 95       	ret
		
		case 'H':
		PORTC = 0b10001001;
 272:	89 e8       	ldi	r24, 0x89	; 137
 274:	85 bb       	out	0x15, r24	; 21
		break;
 276:	08 95       	ret
		
		case 'E':
		PORTC = 0b10000110;
 278:	86 e8       	ldi	r24, 0x86	; 134
 27a:	85 bb       	out	0x15, r24	; 21
		break;
 27c:	08 95       	ret
		
		case 'L':
		PORTC = 0b11000111;
 27e:	87 ec       	ldi	r24, 0xC7	; 199
 280:	85 bb       	out	0x15, r24	; 21
 282:	08 95       	ret

00000284 <_Z11printStringPc>:
	//port D is for choosing which number to show
	DDRD = 0xF0;	// set half of port D to output mode
}

void printString(char* stringg)
{
 284:	cf 92       	push	r12
 286:	df 92       	push	r13
 288:	ef 92       	push	r14
 28a:	ff 92       	push	r15
 28c:	0f 93       	push	r16
 28e:	1f 93       	push	r17
 290:	cf 93       	push	r28
 292:	df 93       	push	r29
 294:	8c 01       	movw	r16, r24
	//print starting in position 0
	unsigned int pos = 0;
	bool decimal_toggle = false;
 296:	d1 2c       	mov	r13, r1
}

void printString(char* stringg)
{
	//print starting in position 0
	unsigned int pos = 0;
 298:	c0 e0       	ldi	r28, 0x00	; 0
 29a:	d0 e0       	ldi	r29, 0x00	; 0
		if(stringg[pos+1] == '.')
		{
			_print_7Segment(stringg[pos],pos);
			_print_7Segment('.',pos);
			pos += 2;
			decimal_toggle = true;
 29c:	cc 24       	eor	r12, r12
 29e:	c3 94       	inc	r12
	//print starting in position 0
	unsigned int pos = 0;
	bool decimal_toggle = false;
	
	//while pos is less than the length
	while (pos < strlen(stringg))
 2a0:	f8 01       	movw	r30, r16
 2a2:	01 90       	ld	r0, Z+
 2a4:	00 20       	and	r0, r0
 2a6:	e9 f7       	brne	.-6      	; 0x2a2 <_Z11printStringPc+0x1e>
 2a8:	31 97       	sbiw	r30, 0x01	; 1
 2aa:	e0 1b       	sub	r30, r16
 2ac:	f1 0b       	sbc	r31, r17
 2ae:	ce 17       	cp	r28, r30
 2b0:	df 07       	cpc	r29, r31
 2b2:	68 f5       	brcc	.+90     	; 0x30e <_Z11printStringPc+0x8a>
	{
		//if there is a decimal point, print at the same pos as previous
		if(stringg[pos+1] == '.')
 2b4:	7e 01       	movw	r14, r28
 2b6:	8f ef       	ldi	r24, 0xFF	; 255
 2b8:	e8 1a       	sub	r14, r24
 2ba:	f8 0a       	sbc	r15, r24
 2bc:	f8 01       	movw	r30, r16
 2be:	ee 0d       	add	r30, r14
 2c0:	ff 1d       	adc	r31, r15
 2c2:	80 81       	ld	r24, Z
 2c4:	8e 32       	cpi	r24, 0x2E	; 46
 2c6:	71 f4       	brne	.+28     	; 0x2e4 <_Z11printStringPc+0x60>
		{
			_print_7Segment(stringg[pos],pos);
 2c8:	f8 01       	movw	r30, r16
 2ca:	ec 0f       	add	r30, r28
 2cc:	fd 1f       	adc	r31, r29
 2ce:	be 01       	movw	r22, r28
 2d0:	80 81       	ld	r24, Z
 2d2:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z15_print_7Segmentci>
			_print_7Segment('.',pos);
 2d6:	be 01       	movw	r22, r28
 2d8:	8e e2       	ldi	r24, 0x2E	; 46
 2da:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z15_print_7Segmentci>
			pos += 2;
 2de:	22 96       	adiw	r28, 0x02	; 2
			decimal_toggle = true;
 2e0:	dc 2c       	mov	r13, r12
 2e2:	de cf       	rjmp	.-68     	; 0x2a0 <_Z11printStringPc+0x1c>
		}
		else {
			//overly complicated? yea
			//can i come up with anything else? nope
			//but hey it works, any genius can rewrite this anytime!
			if(!decimal_toggle)
 2e4:	d1 10       	cpse	r13, r1
 2e6:	09 c0       	rjmp	.+18     	; 0x2fa <_Z11printStringPc+0x76>
			{
				_print_7Segment(stringg[pos],pos);
 2e8:	f8 01       	movw	r30, r16
 2ea:	ec 0f       	add	r30, r28
 2ec:	fd 1f       	adc	r31, r29
 2ee:	be 01       	movw	r22, r28
 2f0:	80 81       	ld	r24, Z
 2f2:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z15_print_7Segmentci>
			else
			{
				_print_7Segment(stringg[pos],pos-1);
			}
			
			pos++;
 2f6:	e7 01       	movw	r28, r14
 2f8:	d3 cf       	rjmp	.-90     	; 0x2a0 <_Z11printStringPc+0x1c>
			{
				_print_7Segment(stringg[pos],pos);
			}
			else
			{
				_print_7Segment(stringg[pos],pos-1);
 2fa:	be 01       	movw	r22, r28
 2fc:	61 50       	subi	r22, 0x01	; 1
 2fe:	71 09       	sbc	r23, r1
 300:	c0 0f       	add	r28, r16
 302:	d1 1f       	adc	r29, r17
 304:	88 81       	ld	r24, Y
 306:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <_Z15_print_7Segmentci>
			}
			
			pos++;
 30a:	e7 01       	movw	r28, r14
 30c:	c9 cf       	rjmp	.-110    	; 0x2a0 <_Z11printStringPc+0x1c>
		}
	}
}
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	1f 91       	pop	r17
 314:	0f 91       	pop	r16
 316:	ff 90       	pop	r15
 318:	ef 90       	pop	r14
 31a:	df 90       	pop	r13
 31c:	cf 90       	pop	r12
 31e:	08 95       	ret

00000320 <_Z8ADC_Readh>:
double current_mode = 1;
const double voltage_coefficient = 50 / 4.95882;


double ADC_Read(uint8_t channel) {
	ADMUX = (ADMUX & 0xF8) | (channel & 0x07); //choosing ADC channel
 320:	97 b1       	in	r25, 0x07	; 7
 322:	98 7f       	andi	r25, 0xF8	; 248
 324:	87 70       	andi	r24, 0x07	; 7
 326:	89 2b       	or	r24, r25
 328:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1 << ADSC); // begin convertign 
 32a:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1 << ADSC)); //while not done yet
 32c:	36 99       	sbic	0x06, 6	; 6
 32e:	fe cf       	rjmp	.-4      	; 0x32c <_Z8ADC_Readh+0xc>
	return ADC; //return ADCL + ADCH
 330:	64 b1       	in	r22, 0x04	; 4
 332:	75 b1       	in	r23, 0x05	; 5
 334:	80 e0       	ldi	r24, 0x00	; 0
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	0e 94 68 03 	call	0x6d0	; 0x6d0 <__floatunsisf>
}
 33c:	08 95       	ret

0000033e <_Z8ADC_Readhh>:

double ADC_Read(uint8_t channel, uint8_t gain) {
	ADMUX |= 0b11100000 ;
 33e:	97 b1       	in	r25, 0x07	; 7
 340:	90 6e       	ori	r25, 0xE0	; 224
 342:	97 b9       	out	0x07, r25	; 7
	ADMUX |= (channel & 0x0F);//choosing ADC channel
 344:	97 b1       	in	r25, 0x07	; 7
 346:	8f 70       	andi	r24, 0x0F	; 15
 348:	98 2b       	or	r25, r24
 34a:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1 << ADSC); // begin convertign
 34c:	36 9a       	sbi	0x06, 6	; 6
	while (ADCSRA & (1 << ADSC)); //while not done yet
 34e:	36 99       	sbic	0x06, 6	; 6
 350:	fe cf       	rjmp	.-4      	; 0x34e <_Z8ADC_Readhh+0x10>
	return ADC; //return ADCL + ADCH
 352:	64 b1       	in	r22, 0x04	; 4
 354:	75 b1       	in	r23, 0x05	; 5
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 68 03 	call	0x6d0	; 0x6d0 <__floatunsisf>
}
 35e:	08 95       	ret

00000360 <__vector_1>:


ISR (INT0_vect)
{
 360:	1f 92       	push	r1
 362:	0f 92       	push	r0
 364:	0f b6       	in	r0, 0x3f	; 63
 366:	0f 92       	push	r0
 368:	11 24       	eor	r1, r1
 36a:	cf 92       	push	r12
 36c:	df 92       	push	r13
 36e:	ef 92       	push	r14
 370:	ff 92       	push	r15
 372:	2f 93       	push	r18
 374:	3f 93       	push	r19
 376:	4f 93       	push	r20
 378:	5f 93       	push	r21
 37a:	6f 93       	push	r22
 37c:	7f 93       	push	r23
 37e:	8f 93       	push	r24
 380:	9f 93       	push	r25
 382:	af 93       	push	r26
 384:	bf 93       	push	r27
 386:	ef 93       	push	r30
 388:	ff 93       	push	r31
	if(voltage_mode == 50)
 38a:	c0 90 64 00 	lds	r12, 0x0064	; 0x800064 <voltage_mode>
 38e:	d0 90 65 00 	lds	r13, 0x0065	; 0x800065 <voltage_mode+0x1>
 392:	e0 90 66 00 	lds	r14, 0x0066	; 0x800066 <voltage_mode+0x2>
 396:	f0 90 67 00 	lds	r15, 0x0067	; 0x800067 <voltage_mode+0x3>
 39a:	20 e0       	ldi	r18, 0x00	; 0
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	48 e4       	ldi	r20, 0x48	; 72
 3a0:	52 e4       	ldi	r21, 0x42	; 66
 3a2:	c7 01       	movw	r24, r14
 3a4:	b6 01       	movw	r22, r12
 3a6:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__cmpsf2>
 3aa:	81 11       	cpse	r24, r1
 3ac:	0f c0       	rjmp	.+30     	; 0x3cc <__vector_1+0x6c>
	{
		voltage_mode = 5;
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	a0 ea       	ldi	r26, 0xA0	; 160
 3b4:	b0 e4       	ldi	r27, 0x40	; 64
 3b6:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <voltage_mode>
 3ba:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <voltage_mode+0x1>
 3be:	a0 93 66 00 	sts	0x0066, r26	; 0x800066 <voltage_mode+0x2>
 3c2:	b0 93 67 00 	sts	0x0067, r27	; 0x800067 <voltage_mode+0x3>
		PORTB = 1<<PB0;	
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	88 bb       	out	0x18, r24	; 24
 3ca:	27 c0       	rjmp	.+78     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
	}
	else if(voltage_mode == 25)
 3cc:	20 e0       	ldi	r18, 0x00	; 0
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	48 ec       	ldi	r20, 0xC8	; 200
 3d2:	51 e4       	ldi	r21, 0x41	; 65
 3d4:	c7 01       	movw	r24, r14
 3d6:	b6 01       	movw	r22, r12
 3d8:	0e 94 63 03 	call	0x6c6	; 0x6c6 <__cmpsf2>
 3dc:	81 11       	cpse	r24, r1
 3de:	0f c0       	rjmp	.+30     	; 0x3fe <__vector_1+0x9e>
	{
		voltage_mode = 50;
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	a8 e4       	ldi	r26, 0x48	; 72
 3e6:	b2 e4       	ldi	r27, 0x42	; 66
 3e8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <voltage_mode>
 3ec:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <voltage_mode+0x1>
 3f0:	a0 93 66 00 	sts	0x0066, r26	; 0x800066 <voltage_mode+0x2>
 3f4:	b0 93 67 00 	sts	0x0067, r27	; 0x800067 <voltage_mode+0x3>
		PORTB = 1<<PB2;
 3f8:	84 e0       	ldi	r24, 0x04	; 4
 3fa:	88 bb       	out	0x18, r24	; 24
 3fc:	0e c0       	rjmp	.+28     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
	}
	else 
	{
		voltage_mode = 25;
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	a8 ec       	ldi	r26, 0xC8	; 200
 404:	b1 e4       	ldi	r27, 0x41	; 65
 406:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <voltage_mode>
 40a:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <voltage_mode+0x1>
 40e:	a0 93 66 00 	sts	0x0066, r26	; 0x800066 <voltage_mode+0x2>
 412:	b0 93 67 00 	sts	0x0067, r27	; 0x800067 <voltage_mode+0x3>
		PORTB = 1<<PB1;
 416:	82 e0       	ldi	r24, 0x02	; 2
 418:	88 bb       	out	0x18, r24	; 24
	}
		
};
 41a:	ff 91       	pop	r31
 41c:	ef 91       	pop	r30
 41e:	bf 91       	pop	r27
 420:	af 91       	pop	r26
 422:	9f 91       	pop	r25
 424:	8f 91       	pop	r24
 426:	7f 91       	pop	r23
 428:	6f 91       	pop	r22
 42a:	5f 91       	pop	r21
 42c:	4f 91       	pop	r20
 42e:	3f 91       	pop	r19
 430:	2f 91       	pop	r18
 432:	ff 90       	pop	r15
 434:	ef 90       	pop	r14
 436:	df 90       	pop	r13
 438:	cf 90       	pop	r12
 43a:	0f 90       	pop	r0
 43c:	0f be       	out	0x3f, r0	; 63
 43e:	0f 90       	pop	r0
 440:	1f 90       	pop	r1
 442:	18 95       	reti

00000444 <main>:

int main(void)
{
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	cd b7       	in	r28, 0x3d	; 61
 44a:	de b7       	in	r29, 0x3e	; 62
 44c:	2a 97       	sbiw	r28, 0x0a	; 10
 44e:	0f b6       	in	r0, 0x3f	; 63
 450:	f8 94       	cli
 452:	de bf       	out	0x3e, r29	; 62
 454:	0f be       	out	0x3f, r0	; 63
 456:	cd bf       	out	0x3d, r28	; 61
	_LED_init();
 458:	0e 94 de 00 	call	0x1bc	; 0x1bc <_Z9_LED_initv>
	DDRB = (1<<PB0) | (1<<PB1) | (1<<PB2);
 45c:	87 e0       	ldi	r24, 0x07	; 7
 45e:	87 bb       	out	0x17, r24	; 23
	PORTB = (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3);
 460:	8f e0       	ldi	r24, 0x0F	; 15
 462:	88 bb       	out	0x18, r24	; 24
	//setting up ADC
	//set to using external VREF
	ADMUX = (1<<REFS0);
 464:	90 e4       	ldi	r25, 0x40	; 64
 466:	97 b9       	out	0x07, r25	; 7
	//turn on ADC function
	ADCSRA = (1<<ADEN) ;
 468:	80 e8       	ldi	r24, 0x80	; 128
 46a:	86 b9       	out	0x06, r24	; 6
	//set prescaler to 128 (page 219)
	ADCSRA |= (1<<ADPS0) | (1<<ADPS1) | (1<<ADPS2);
 46c:	86 b1       	in	r24, 0x06	; 6
 46e:	87 60       	ori	r24, 0x07	; 7
 470:	86 b9       	out	0x06, r24	; 6
	


	//set interrupt mode (page 49)
	GICR = (1<<INT0);
 472:	9b bf       	out	0x3b, r25	; 59
	MCUCR = (1<<ISC11) | (1<<ISC01);
 474:	8a e0       	ldi	r24, 0x0A	; 10
 476:	85 bf       	out	0x35, r24	; 53
	
	//button pull up res
	PORTD |= 1<<PD2;
 478:	92 9a       	sbi	0x12, 2	; 18
	sei();
 47a:	78 94       	sei
		else
		{
			reading_voltage = true;
		}
		
		if(reading_voltage)
 47c:	b3 9b       	sbis	0x16, 3	; 22
 47e:	5e c0       	rjmp	.+188    	; 0x53c <__stack+0xdd>
		{
			//read voltage 
			//read the POSITIVE probe
			double adc_value_pos = ADC_Read(3);
 480:	83 e0       	ldi	r24, 0x03	; 3
 482:	0e 94 90 01 	call	0x320	; 0x320 <_Z8ADC_Readh>
			double voltage_plus =  adc_value_pos * 5.0/1024.0;
 486:	20 e0       	ldi	r18, 0x00	; 0
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	40 ea       	ldi	r20, 0xA0	; 160
 48c:	50 e4       	ldi	r21, 0x40	; 64
 48e:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 492:	20 e0       	ldi	r18, 0x00	; 0
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	40 e8       	ldi	r20, 0x80	; 128
 498:	5a e3       	ldi	r21, 0x3A	; 58
 49a:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 49e:	6b 01       	movw	r12, r22
 4a0:	7c 01       	movw	r14, r24
			voltage_plus = voltage_plus * voltage_coefficient;
			
			//read the NEGATIVE probe
			double adc_value_neg = ADC_Read(4);
 4a2:	84 e0       	ldi	r24, 0x04	; 4
 4a4:	0e 94 90 01 	call	0x320	; 0x320 <_Z8ADC_Readh>
			double voltage_neg =  adc_value_neg * 5.0/1024.0;
 4a8:	20 e0       	ldi	r18, 0x00	; 0
 4aa:	30 e0       	ldi	r19, 0x00	; 0
 4ac:	40 ea       	ldi	r20, 0xA0	; 160
 4ae:	50 e4       	ldi	r21, 0x40	; 64
 4b0:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 4b4:	20 e0       	ldi	r18, 0x00	; 0
 4b6:	30 e0       	ldi	r19, 0x00	; 0
 4b8:	40 e8       	ldi	r20, 0x80	; 128
 4ba:	5a e3       	ldi	r21, 0x3A	; 58
 4bc:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 4c0:	4b 01       	movw	r8, r22
 4c2:	5c 01       	movw	r10, r24
			voltage_neg = voltage_neg * voltage_coefficient;
			
			//get voltage from pos and neg terminal
			double voltage = voltage_plus - voltage_neg;
 4c4:	26 e2       	ldi	r18, 0x26	; 38
 4c6:	34 e5       	ldi	r19, 0x54	; 84
 4c8:	41 e2       	ldi	r20, 0x21	; 33
 4ca:	51 e4       	ldi	r21, 0x41	; 65
 4cc:	c7 01       	movw	r24, r14
 4ce:	b6 01       	movw	r22, r12
 4d0:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 4d4:	6b 01       	movw	r12, r22
 4d6:	7c 01       	movw	r14, r24
 4d8:	26 e2       	ldi	r18, 0x26	; 38
 4da:	34 e5       	ldi	r19, 0x54	; 84
 4dc:	41 e2       	ldi	r20, 0x21	; 33
 4de:	51 e4       	ldi	r21, 0x41	; 65
 4e0:	c5 01       	movw	r24, r10
 4e2:	b4 01       	movw	r22, r8
 4e4:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 4e8:	9b 01       	movw	r18, r22
 4ea:	ac 01       	movw	r20, r24
 4ec:	c7 01       	movw	r24, r14
 4ee:	b6 01       	movw	r22, r12
 4f0:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__subsf3>
 4f4:	c6 2e       	mov	r12, r22
 4f6:	d7 2e       	mov	r13, r23
 4f8:	e8 2e       	mov	r14, r24
 4fa:	f9 2e       	mov	r15, r25
			if(voltage >= voltage_mode)
 4fc:	a0 90 64 00 	lds	r10, 0x0064	; 0x800064 <voltage_mode>
 500:	b0 90 65 00 	lds	r11, 0x0065	; 0x800065 <voltage_mode+0x1>
 504:	00 91 66 00 	lds	r16, 0x0066	; 0x800066 <voltage_mode+0x2>
 508:	10 91 67 00 	lds	r17, 0x0067	; 0x800067 <voltage_mode+0x3>
 50c:	2a 2d       	mov	r18, r10
 50e:	3b 2d       	mov	r19, r11
 510:	40 2f       	mov	r20, r16
 512:	51 2f       	mov	r21, r17
 514:	0e 94 1a 04 	call	0x834	; 0x834 <__gesf2>
 518:	88 23       	and	r24, r24
 51a:	24 f0       	brlt	.+8      	; 0x524 <__stack+0xc5>
			{
				//if differential is >> set mode, cap it
				voltage = voltage_mode;
 51c:	ca 2c       	mov	r12, r10
 51e:	db 2c       	mov	r13, r11
 520:	e0 2e       	mov	r14, r16
 522:	f1 2e       	mov	r15, r17
			}
			
			//change a double to a char[] and store it to string
			//number,length of char, decimal point, srting
			dtostrf(voltage,5, 3, string);
 524:	8e 01       	movw	r16, r28
 526:	0f 5f       	subi	r16, 0xFF	; 255
 528:	1f 4f       	sbci	r17, 0xFF	; 255
 52a:	23 e0       	ldi	r18, 0x03	; 3
 52c:	45 e0       	ldi	r20, 0x05	; 5
 52e:	6c 2d       	mov	r22, r12
 530:	7d 2d       	mov	r23, r13
 532:	8e 2d       	mov	r24, r14
 534:	9f 2d       	mov	r25, r15
 536:	0e 94 92 04 	call	0x924	; 0x924 <dtostrf>
 53a:	53 c0       	rjmp	.+166    	; 0x5e2 <__stack+0x183>
		}
		else {
			//read current
			double adc_value_pos = ADC_Read(0,200);
 53c:	68 ec       	ldi	r22, 0xC8	; 200
 53e:	80 e0       	ldi	r24, 0x00	; 0
 540:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z8ADC_Readhh>
 544:	6b 01       	movw	r12, r22
 546:	7c 01       	movw	r14, r24
			double amp_plus =  adc_value_pos * 5.0/1024.0;
			//amp_plus = amp_plus * voltage_coefficient;
			
			//read the NEGATIVE probe
			double adc_value_neg = ADC_Read(1,200);
 548:	68 ec       	ldi	r22, 0xC8	; 200
 54a:	81 e0       	ldi	r24, 0x01	; 1
 54c:	0e 94 9f 01 	call	0x33e	; 0x33e <_Z8ADC_Readhh>
 550:	4b 01       	movw	r8, r22
 552:	5c 01       	movw	r10, r24
			double amp_neg =  adc_value_neg * 5.0/1024.0;
			//amp_neg = amp_neg * voltage_coefficient;
			
			//get voltage from pos and neg terminal
			double current = amp_plus - amp_neg;
 554:	20 e0       	ldi	r18, 0x00	; 0
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	40 ea       	ldi	r20, 0xA0	; 160
 55a:	50 e4       	ldi	r21, 0x40	; 64
 55c:	c7 01       	movw	r24, r14
 55e:	b6 01       	movw	r22, r12
 560:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 564:	20 e0       	ldi	r18, 0x00	; 0
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	40 e8       	ldi	r20, 0x80	; 128
 56a:	5a e3       	ldi	r21, 0x3A	; 58
 56c:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 570:	6b 01       	movw	r12, r22
 572:	7c 01       	movw	r14, r24
 574:	20 e0       	ldi	r18, 0x00	; 0
 576:	30 e0       	ldi	r19, 0x00	; 0
 578:	40 ea       	ldi	r20, 0xA0	; 160
 57a:	50 e4       	ldi	r21, 0x40	; 64
 57c:	c5 01       	movw	r24, r10
 57e:	b4 01       	movw	r22, r8
 580:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 584:	20 e0       	ldi	r18, 0x00	; 0
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	40 e8       	ldi	r20, 0x80	; 128
 58a:	5a e3       	ldi	r21, 0x3A	; 58
 58c:	0e 94 1f 04 	call	0x83e	; 0x83e <__mulsf3>
 590:	9b 01       	movw	r18, r22
 592:	ac 01       	movw	r20, r24
 594:	c7 01       	movw	r24, r14
 596:	b6 01       	movw	r22, r12
 598:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__subsf3>
 59c:	c6 2e       	mov	r12, r22
 59e:	d7 2e       	mov	r13, r23
 5a0:	e8 2e       	mov	r14, r24
 5a2:	f9 2e       	mov	r15, r25
			if(current >= current_mode)
 5a4:	a0 90 60 00 	lds	r10, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 5a8:	b0 90 61 00 	lds	r11, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 5ac:	00 91 62 00 	lds	r16, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 5b0:	10 91 63 00 	lds	r17, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 5b4:	2a 2d       	mov	r18, r10
 5b6:	3b 2d       	mov	r19, r11
 5b8:	40 2f       	mov	r20, r16
 5ba:	51 2f       	mov	r21, r17
 5bc:	0e 94 1a 04 	call	0x834	; 0x834 <__gesf2>
 5c0:	88 23       	and	r24, r24
 5c2:	24 f0       	brlt	.+8      	; 0x5cc <__stack+0x16d>
			{
				//if differential is >> set mode, cap it
				current = current_mode;
 5c4:	ca 2c       	mov	r12, r10
 5c6:	db 2c       	mov	r13, r11
 5c8:	e0 2e       	mov	r14, r16
 5ca:	f1 2e       	mov	r15, r17
			}
			
			//change a double to a char[] and store it to string
			//number,length of char, decimal point, srting
			dtostrf(current,5, 3, string);			
 5cc:	8e 01       	movw	r16, r28
 5ce:	0f 5f       	subi	r16, 0xFF	; 255
 5d0:	1f 4f       	sbci	r17, 0xFF	; 255
 5d2:	23 e0       	ldi	r18, 0x03	; 3
 5d4:	45 e0       	ldi	r20, 0x05	; 5
 5d6:	6c 2d       	mov	r22, r12
 5d8:	7d 2d       	mov	r23, r13
 5da:	8e 2d       	mov	r24, r14
 5dc:	9f 2d       	mov	r25, r15
 5de:	0e 94 92 04 	call	0x924	; 0x924 <dtostrf>
		}
		printString(string);
 5e2:	ce 01       	movw	r24, r28
 5e4:	01 96       	adiw	r24, 0x01	; 1
 5e6:	0e 94 42 01 	call	0x284	; 0x284 <_Z11printStringPc>
	
	//string to store voltage value
	
	char string[10];
	bool reading_voltage= true;
    while (1) 
 5ea:	48 cf       	rjmp	.-368    	; 0x47c <__stack+0x1d>

000005ec <__subsf3>:
 5ec:	50 58       	subi	r21, 0x80	; 128

000005ee <__addsf3>:
 5ee:	bb 27       	eor	r27, r27
 5f0:	aa 27       	eor	r26, r26
 5f2:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3x>
 5f6:	0c 94 e0 03 	jmp	0x7c0	; 0x7c0 <__fp_round>
 5fa:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__fp_pscA>
 5fe:	38 f0       	brcs	.+14     	; 0x60e <__addsf3+0x20>
 600:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fp_pscB>
 604:	20 f0       	brcs	.+8      	; 0x60e <__addsf3+0x20>
 606:	39 f4       	brne	.+14     	; 0x616 <__addsf3+0x28>
 608:	9f 3f       	cpi	r25, 0xFF	; 255
 60a:	19 f4       	brne	.+6      	; 0x612 <__addsf3+0x24>
 60c:	26 f4       	brtc	.+8      	; 0x616 <__addsf3+0x28>
 60e:	0c 94 cf 03 	jmp	0x79e	; 0x79e <__fp_nan>
 612:	0e f4       	brtc	.+2      	; 0x616 <__addsf3+0x28>
 614:	e0 95       	com	r30
 616:	e7 fb       	bst	r30, 7
 618:	0c 94 c9 03 	jmp	0x792	; 0x792 <__fp_inf>

0000061c <__addsf3x>:
 61c:	e9 2f       	mov	r30, r25
 61e:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__fp_split3>
 622:	58 f3       	brcs	.-42     	; 0x5fa <__addsf3+0xc>
 624:	ba 17       	cp	r27, r26
 626:	62 07       	cpc	r22, r18
 628:	73 07       	cpc	r23, r19
 62a:	84 07       	cpc	r24, r20
 62c:	95 07       	cpc	r25, r21
 62e:	20 f0       	brcs	.+8      	; 0x638 <__addsf3x+0x1c>
 630:	79 f4       	brne	.+30     	; 0x650 <__addsf3x+0x34>
 632:	a6 f5       	brtc	.+104    	; 0x69c <__addsf3x+0x80>
 634:	0c 94 13 04 	jmp	0x826	; 0x826 <__fp_zero>
 638:	0e f4       	brtc	.+2      	; 0x63c <__addsf3x+0x20>
 63a:	e0 95       	com	r30
 63c:	0b 2e       	mov	r0, r27
 63e:	ba 2f       	mov	r27, r26
 640:	a0 2d       	mov	r26, r0
 642:	0b 01       	movw	r0, r22
 644:	b9 01       	movw	r22, r18
 646:	90 01       	movw	r18, r0
 648:	0c 01       	movw	r0, r24
 64a:	ca 01       	movw	r24, r20
 64c:	a0 01       	movw	r20, r0
 64e:	11 24       	eor	r1, r1
 650:	ff 27       	eor	r31, r31
 652:	59 1b       	sub	r21, r25
 654:	99 f0       	breq	.+38     	; 0x67c <__addsf3x+0x60>
 656:	59 3f       	cpi	r21, 0xF9	; 249
 658:	50 f4       	brcc	.+20     	; 0x66e <__addsf3x+0x52>
 65a:	50 3e       	cpi	r21, 0xE0	; 224
 65c:	68 f1       	brcs	.+90     	; 0x6b8 <__addsf3x+0x9c>
 65e:	1a 16       	cp	r1, r26
 660:	f0 40       	sbci	r31, 0x00	; 0
 662:	a2 2f       	mov	r26, r18
 664:	23 2f       	mov	r18, r19
 666:	34 2f       	mov	r19, r20
 668:	44 27       	eor	r20, r20
 66a:	58 5f       	subi	r21, 0xF8	; 248
 66c:	f3 cf       	rjmp	.-26     	; 0x654 <__addsf3x+0x38>
 66e:	46 95       	lsr	r20
 670:	37 95       	ror	r19
 672:	27 95       	ror	r18
 674:	a7 95       	ror	r26
 676:	f0 40       	sbci	r31, 0x00	; 0
 678:	53 95       	inc	r21
 67a:	c9 f7       	brne	.-14     	; 0x66e <__addsf3x+0x52>
 67c:	7e f4       	brtc	.+30     	; 0x69c <__addsf3x+0x80>
 67e:	1f 16       	cp	r1, r31
 680:	ba 0b       	sbc	r27, r26
 682:	62 0b       	sbc	r22, r18
 684:	73 0b       	sbc	r23, r19
 686:	84 0b       	sbc	r24, r20
 688:	ba f0       	brmi	.+46     	; 0x6b8 <__addsf3x+0x9c>
 68a:	91 50       	subi	r25, 0x01	; 1
 68c:	a1 f0       	breq	.+40     	; 0x6b6 <__addsf3x+0x9a>
 68e:	ff 0f       	add	r31, r31
 690:	bb 1f       	adc	r27, r27
 692:	66 1f       	adc	r22, r22
 694:	77 1f       	adc	r23, r23
 696:	88 1f       	adc	r24, r24
 698:	c2 f7       	brpl	.-16     	; 0x68a <__addsf3x+0x6e>
 69a:	0e c0       	rjmp	.+28     	; 0x6b8 <__addsf3x+0x9c>
 69c:	ba 0f       	add	r27, r26
 69e:	62 1f       	adc	r22, r18
 6a0:	73 1f       	adc	r23, r19
 6a2:	84 1f       	adc	r24, r20
 6a4:	48 f4       	brcc	.+18     	; 0x6b8 <__addsf3x+0x9c>
 6a6:	87 95       	ror	r24
 6a8:	77 95       	ror	r23
 6aa:	67 95       	ror	r22
 6ac:	b7 95       	ror	r27
 6ae:	f7 95       	ror	r31
 6b0:	9e 3f       	cpi	r25, 0xFE	; 254
 6b2:	08 f0       	brcs	.+2      	; 0x6b6 <__addsf3x+0x9a>
 6b4:	b0 cf       	rjmp	.-160    	; 0x616 <__addsf3+0x28>
 6b6:	93 95       	inc	r25
 6b8:	88 0f       	add	r24, r24
 6ba:	08 f0       	brcs	.+2      	; 0x6be <__addsf3x+0xa2>
 6bc:	99 27       	eor	r25, r25
 6be:	ee 0f       	add	r30, r30
 6c0:	97 95       	ror	r25
 6c2:	87 95       	ror	r24
 6c4:	08 95       	ret

000006c6 <__cmpsf2>:
 6c6:	0e 94 a5 03 	call	0x74a	; 0x74a <__fp_cmp>
 6ca:	08 f4       	brcc	.+2      	; 0x6ce <__cmpsf2+0x8>
 6cc:	81 e0       	ldi	r24, 0x01	; 1
 6ce:	08 95       	ret

000006d0 <__floatunsisf>:
 6d0:	e8 94       	clt
 6d2:	09 c0       	rjmp	.+18     	; 0x6e6 <__floatsisf+0x12>

000006d4 <__floatsisf>:
 6d4:	97 fb       	bst	r25, 7
 6d6:	3e f4       	brtc	.+14     	; 0x6e6 <__floatsisf+0x12>
 6d8:	90 95       	com	r25
 6da:	80 95       	com	r24
 6dc:	70 95       	com	r23
 6de:	61 95       	neg	r22
 6e0:	7f 4f       	sbci	r23, 0xFF	; 255
 6e2:	8f 4f       	sbci	r24, 0xFF	; 255
 6e4:	9f 4f       	sbci	r25, 0xFF	; 255
 6e6:	99 23       	and	r25, r25
 6e8:	a9 f0       	breq	.+42     	; 0x714 <__floatsisf+0x40>
 6ea:	f9 2f       	mov	r31, r25
 6ec:	96 e9       	ldi	r25, 0x96	; 150
 6ee:	bb 27       	eor	r27, r27
 6f0:	93 95       	inc	r25
 6f2:	f6 95       	lsr	r31
 6f4:	87 95       	ror	r24
 6f6:	77 95       	ror	r23
 6f8:	67 95       	ror	r22
 6fa:	b7 95       	ror	r27
 6fc:	f1 11       	cpse	r31, r1
 6fe:	f8 cf       	rjmp	.-16     	; 0x6f0 <__floatsisf+0x1c>
 700:	fa f4       	brpl	.+62     	; 0x740 <__floatsisf+0x6c>
 702:	bb 0f       	add	r27, r27
 704:	11 f4       	brne	.+4      	; 0x70a <__floatsisf+0x36>
 706:	60 ff       	sbrs	r22, 0
 708:	1b c0       	rjmp	.+54     	; 0x740 <__floatsisf+0x6c>
 70a:	6f 5f       	subi	r22, 0xFF	; 255
 70c:	7f 4f       	sbci	r23, 0xFF	; 255
 70e:	8f 4f       	sbci	r24, 0xFF	; 255
 710:	9f 4f       	sbci	r25, 0xFF	; 255
 712:	16 c0       	rjmp	.+44     	; 0x740 <__floatsisf+0x6c>
 714:	88 23       	and	r24, r24
 716:	11 f0       	breq	.+4      	; 0x71c <__floatsisf+0x48>
 718:	96 e9       	ldi	r25, 0x96	; 150
 71a:	11 c0       	rjmp	.+34     	; 0x73e <__floatsisf+0x6a>
 71c:	77 23       	and	r23, r23
 71e:	21 f0       	breq	.+8      	; 0x728 <__floatsisf+0x54>
 720:	9e e8       	ldi	r25, 0x8E	; 142
 722:	87 2f       	mov	r24, r23
 724:	76 2f       	mov	r23, r22
 726:	05 c0       	rjmp	.+10     	; 0x732 <__floatsisf+0x5e>
 728:	66 23       	and	r22, r22
 72a:	71 f0       	breq	.+28     	; 0x748 <__floatsisf+0x74>
 72c:	96 e8       	ldi	r25, 0x86	; 134
 72e:	86 2f       	mov	r24, r22
 730:	70 e0       	ldi	r23, 0x00	; 0
 732:	60 e0       	ldi	r22, 0x00	; 0
 734:	2a f0       	brmi	.+10     	; 0x740 <__floatsisf+0x6c>
 736:	9a 95       	dec	r25
 738:	66 0f       	add	r22, r22
 73a:	77 1f       	adc	r23, r23
 73c:	88 1f       	adc	r24, r24
 73e:	da f7       	brpl	.-10     	; 0x736 <__floatsisf+0x62>
 740:	88 0f       	add	r24, r24
 742:	96 95       	lsr	r25
 744:	87 95       	ror	r24
 746:	97 f9       	bld	r25, 7
 748:	08 95       	ret

0000074a <__fp_cmp>:
 74a:	99 0f       	add	r25, r25
 74c:	00 08       	sbc	r0, r0
 74e:	55 0f       	add	r21, r21
 750:	aa 0b       	sbc	r26, r26
 752:	e0 e8       	ldi	r30, 0x80	; 128
 754:	fe ef       	ldi	r31, 0xFE	; 254
 756:	16 16       	cp	r1, r22
 758:	17 06       	cpc	r1, r23
 75a:	e8 07       	cpc	r30, r24
 75c:	f9 07       	cpc	r31, r25
 75e:	c0 f0       	brcs	.+48     	; 0x790 <__fp_cmp+0x46>
 760:	12 16       	cp	r1, r18
 762:	13 06       	cpc	r1, r19
 764:	e4 07       	cpc	r30, r20
 766:	f5 07       	cpc	r31, r21
 768:	98 f0       	brcs	.+38     	; 0x790 <__fp_cmp+0x46>
 76a:	62 1b       	sub	r22, r18
 76c:	73 0b       	sbc	r23, r19
 76e:	84 0b       	sbc	r24, r20
 770:	95 0b       	sbc	r25, r21
 772:	39 f4       	brne	.+14     	; 0x782 <__fp_cmp+0x38>
 774:	0a 26       	eor	r0, r26
 776:	61 f0       	breq	.+24     	; 0x790 <__fp_cmp+0x46>
 778:	23 2b       	or	r18, r19
 77a:	24 2b       	or	r18, r20
 77c:	25 2b       	or	r18, r21
 77e:	21 f4       	brne	.+8      	; 0x788 <__fp_cmp+0x3e>
 780:	08 95       	ret
 782:	0a 26       	eor	r0, r26
 784:	09 f4       	brne	.+2      	; 0x788 <__fp_cmp+0x3e>
 786:	a1 40       	sbci	r26, 0x01	; 1
 788:	a6 95       	lsr	r26
 78a:	8f ef       	ldi	r24, 0xFF	; 255
 78c:	81 1d       	adc	r24, r1
 78e:	81 1d       	adc	r24, r1
 790:	08 95       	ret

00000792 <__fp_inf>:
 792:	97 f9       	bld	r25, 7
 794:	9f 67       	ori	r25, 0x7F	; 127
 796:	80 e8       	ldi	r24, 0x80	; 128
 798:	70 e0       	ldi	r23, 0x00	; 0
 79a:	60 e0       	ldi	r22, 0x00	; 0
 79c:	08 95       	ret

0000079e <__fp_nan>:
 79e:	9f ef       	ldi	r25, 0xFF	; 255
 7a0:	80 ec       	ldi	r24, 0xC0	; 192
 7a2:	08 95       	ret

000007a4 <__fp_pscA>:
 7a4:	00 24       	eor	r0, r0
 7a6:	0a 94       	dec	r0
 7a8:	16 16       	cp	r1, r22
 7aa:	17 06       	cpc	r1, r23
 7ac:	18 06       	cpc	r1, r24
 7ae:	09 06       	cpc	r0, r25
 7b0:	08 95       	ret

000007b2 <__fp_pscB>:
 7b2:	00 24       	eor	r0, r0
 7b4:	0a 94       	dec	r0
 7b6:	12 16       	cp	r1, r18
 7b8:	13 06       	cpc	r1, r19
 7ba:	14 06       	cpc	r1, r20
 7bc:	05 06       	cpc	r0, r21
 7be:	08 95       	ret

000007c0 <__fp_round>:
 7c0:	09 2e       	mov	r0, r25
 7c2:	03 94       	inc	r0
 7c4:	00 0c       	add	r0, r0
 7c6:	11 f4       	brne	.+4      	; 0x7cc <__fp_round+0xc>
 7c8:	88 23       	and	r24, r24
 7ca:	52 f0       	brmi	.+20     	; 0x7e0 <__fp_round+0x20>
 7cc:	bb 0f       	add	r27, r27
 7ce:	40 f4       	brcc	.+16     	; 0x7e0 <__fp_round+0x20>
 7d0:	bf 2b       	or	r27, r31
 7d2:	11 f4       	brne	.+4      	; 0x7d8 <__fp_round+0x18>
 7d4:	60 ff       	sbrs	r22, 0
 7d6:	04 c0       	rjmp	.+8      	; 0x7e0 <__fp_round+0x20>
 7d8:	6f 5f       	subi	r22, 0xFF	; 255
 7da:	7f 4f       	sbci	r23, 0xFF	; 255
 7dc:	8f 4f       	sbci	r24, 0xFF	; 255
 7de:	9f 4f       	sbci	r25, 0xFF	; 255
 7e0:	08 95       	ret

000007e2 <__fp_split3>:
 7e2:	57 fd       	sbrc	r21, 7
 7e4:	90 58       	subi	r25, 0x80	; 128
 7e6:	44 0f       	add	r20, r20
 7e8:	55 1f       	adc	r21, r21
 7ea:	59 f0       	breq	.+22     	; 0x802 <__fp_splitA+0x10>
 7ec:	5f 3f       	cpi	r21, 0xFF	; 255
 7ee:	71 f0       	breq	.+28     	; 0x80c <__fp_splitA+0x1a>
 7f0:	47 95       	ror	r20

000007f2 <__fp_splitA>:
 7f2:	88 0f       	add	r24, r24
 7f4:	97 fb       	bst	r25, 7
 7f6:	99 1f       	adc	r25, r25
 7f8:	61 f0       	breq	.+24     	; 0x812 <__fp_splitA+0x20>
 7fa:	9f 3f       	cpi	r25, 0xFF	; 255
 7fc:	79 f0       	breq	.+30     	; 0x81c <__fp_splitA+0x2a>
 7fe:	87 95       	ror	r24
 800:	08 95       	ret
 802:	12 16       	cp	r1, r18
 804:	13 06       	cpc	r1, r19
 806:	14 06       	cpc	r1, r20
 808:	55 1f       	adc	r21, r21
 80a:	f2 cf       	rjmp	.-28     	; 0x7f0 <__fp_split3+0xe>
 80c:	46 95       	lsr	r20
 80e:	f1 df       	rcall	.-30     	; 0x7f2 <__fp_splitA>
 810:	08 c0       	rjmp	.+16     	; 0x822 <__fp_splitA+0x30>
 812:	16 16       	cp	r1, r22
 814:	17 06       	cpc	r1, r23
 816:	18 06       	cpc	r1, r24
 818:	99 1f       	adc	r25, r25
 81a:	f1 cf       	rjmp	.-30     	; 0x7fe <__fp_splitA+0xc>
 81c:	86 95       	lsr	r24
 81e:	71 05       	cpc	r23, r1
 820:	61 05       	cpc	r22, r1
 822:	08 94       	sec
 824:	08 95       	ret

00000826 <__fp_zero>:
 826:	e8 94       	clt

00000828 <__fp_szero>:
 828:	bb 27       	eor	r27, r27
 82a:	66 27       	eor	r22, r22
 82c:	77 27       	eor	r23, r23
 82e:	cb 01       	movw	r24, r22
 830:	97 f9       	bld	r25, 7
 832:	08 95       	ret

00000834 <__gesf2>:
 834:	0e 94 a5 03 	call	0x74a	; 0x74a <__fp_cmp>
 838:	08 f4       	brcc	.+2      	; 0x83c <__gesf2+0x8>
 83a:	8f ef       	ldi	r24, 0xFF	; 255
 83c:	08 95       	ret

0000083e <__mulsf3>:
 83e:	0e 94 32 04 	call	0x864	; 0x864 <__mulsf3x>
 842:	0c 94 e0 03 	jmp	0x7c0	; 0x7c0 <__fp_round>
 846:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__fp_pscA>
 84a:	38 f0       	brcs	.+14     	; 0x85a <__mulsf3+0x1c>
 84c:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__fp_pscB>
 850:	20 f0       	brcs	.+8      	; 0x85a <__mulsf3+0x1c>
 852:	95 23       	and	r25, r21
 854:	11 f0       	breq	.+4      	; 0x85a <__mulsf3+0x1c>
 856:	0c 94 c9 03 	jmp	0x792	; 0x792 <__fp_inf>
 85a:	0c 94 cf 03 	jmp	0x79e	; 0x79e <__fp_nan>
 85e:	11 24       	eor	r1, r1
 860:	0c 94 14 04 	jmp	0x828	; 0x828 <__fp_szero>

00000864 <__mulsf3x>:
 864:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <__fp_split3>
 868:	70 f3       	brcs	.-36     	; 0x846 <__mulsf3+0x8>

0000086a <__mulsf3_pse>:
 86a:	95 9f       	mul	r25, r21
 86c:	c1 f3       	breq	.-16     	; 0x85e <__mulsf3+0x20>
 86e:	95 0f       	add	r25, r21
 870:	50 e0       	ldi	r21, 0x00	; 0
 872:	55 1f       	adc	r21, r21
 874:	62 9f       	mul	r22, r18
 876:	f0 01       	movw	r30, r0
 878:	72 9f       	mul	r23, r18
 87a:	bb 27       	eor	r27, r27
 87c:	f0 0d       	add	r31, r0
 87e:	b1 1d       	adc	r27, r1
 880:	63 9f       	mul	r22, r19
 882:	aa 27       	eor	r26, r26
 884:	f0 0d       	add	r31, r0
 886:	b1 1d       	adc	r27, r1
 888:	aa 1f       	adc	r26, r26
 88a:	64 9f       	mul	r22, r20
 88c:	66 27       	eor	r22, r22
 88e:	b0 0d       	add	r27, r0
 890:	a1 1d       	adc	r26, r1
 892:	66 1f       	adc	r22, r22
 894:	82 9f       	mul	r24, r18
 896:	22 27       	eor	r18, r18
 898:	b0 0d       	add	r27, r0
 89a:	a1 1d       	adc	r26, r1
 89c:	62 1f       	adc	r22, r18
 89e:	73 9f       	mul	r23, r19
 8a0:	b0 0d       	add	r27, r0
 8a2:	a1 1d       	adc	r26, r1
 8a4:	62 1f       	adc	r22, r18
 8a6:	83 9f       	mul	r24, r19
 8a8:	a0 0d       	add	r26, r0
 8aa:	61 1d       	adc	r22, r1
 8ac:	22 1f       	adc	r18, r18
 8ae:	74 9f       	mul	r23, r20
 8b0:	33 27       	eor	r19, r19
 8b2:	a0 0d       	add	r26, r0
 8b4:	61 1d       	adc	r22, r1
 8b6:	23 1f       	adc	r18, r19
 8b8:	84 9f       	mul	r24, r20
 8ba:	60 0d       	add	r22, r0
 8bc:	21 1d       	adc	r18, r1
 8be:	82 2f       	mov	r24, r18
 8c0:	76 2f       	mov	r23, r22
 8c2:	6a 2f       	mov	r22, r26
 8c4:	11 24       	eor	r1, r1
 8c6:	9f 57       	subi	r25, 0x7F	; 127
 8c8:	50 40       	sbci	r21, 0x00	; 0
 8ca:	9a f0       	brmi	.+38     	; 0x8f2 <__mulsf3_pse+0x88>
 8cc:	f1 f0       	breq	.+60     	; 0x90a <__mulsf3_pse+0xa0>
 8ce:	88 23       	and	r24, r24
 8d0:	4a f0       	brmi	.+18     	; 0x8e4 <__mulsf3_pse+0x7a>
 8d2:	ee 0f       	add	r30, r30
 8d4:	ff 1f       	adc	r31, r31
 8d6:	bb 1f       	adc	r27, r27
 8d8:	66 1f       	adc	r22, r22
 8da:	77 1f       	adc	r23, r23
 8dc:	88 1f       	adc	r24, r24
 8de:	91 50       	subi	r25, 0x01	; 1
 8e0:	50 40       	sbci	r21, 0x00	; 0
 8e2:	a9 f7       	brne	.-22     	; 0x8ce <__mulsf3_pse+0x64>
 8e4:	9e 3f       	cpi	r25, 0xFE	; 254
 8e6:	51 05       	cpc	r21, r1
 8e8:	80 f0       	brcs	.+32     	; 0x90a <__mulsf3_pse+0xa0>
 8ea:	0c 94 c9 03 	jmp	0x792	; 0x792 <__fp_inf>
 8ee:	0c 94 14 04 	jmp	0x828	; 0x828 <__fp_szero>
 8f2:	5f 3f       	cpi	r21, 0xFF	; 255
 8f4:	e4 f3       	brlt	.-8      	; 0x8ee <__mulsf3_pse+0x84>
 8f6:	98 3e       	cpi	r25, 0xE8	; 232
 8f8:	d4 f3       	brlt	.-12     	; 0x8ee <__mulsf3_pse+0x84>
 8fa:	86 95       	lsr	r24
 8fc:	77 95       	ror	r23
 8fe:	67 95       	ror	r22
 900:	b7 95       	ror	r27
 902:	f7 95       	ror	r31
 904:	e7 95       	ror	r30
 906:	9f 5f       	subi	r25, 0xFF	; 255
 908:	c1 f7       	brne	.-16     	; 0x8fa <__mulsf3_pse+0x90>
 90a:	fe 2b       	or	r31, r30
 90c:	88 0f       	add	r24, r24
 90e:	91 1d       	adc	r25, r1
 910:	96 95       	lsr	r25
 912:	87 95       	ror	r24
 914:	97 f9       	bld	r25, 7
 916:	08 95       	ret

00000918 <__tablejump2__>:
 918:	ee 0f       	add	r30, r30
 91a:	ff 1f       	adc	r31, r31
 91c:	05 90       	lpm	r0, Z+
 91e:	f4 91       	lpm	r31, Z
 920:	e0 2d       	mov	r30, r0
 922:	09 94       	ijmp

00000924 <dtostrf>:
 924:	ef 92       	push	r14
 926:	0f 93       	push	r16
 928:	1f 93       	push	r17
 92a:	cf 93       	push	r28
 92c:	df 93       	push	r29
 92e:	e8 01       	movw	r28, r16
 930:	47 fd       	sbrc	r20, 7
 932:	02 c0       	rjmp	.+4      	; 0x938 <dtostrf+0x14>
 934:	34 e0       	ldi	r19, 0x04	; 4
 936:	01 c0       	rjmp	.+2      	; 0x93a <dtostrf+0x16>
 938:	34 e1       	ldi	r19, 0x14	; 20
 93a:	04 2e       	mov	r0, r20
 93c:	00 0c       	add	r0, r0
 93e:	55 0b       	sbc	r21, r21
 940:	57 ff       	sbrs	r21, 7
 942:	03 c0       	rjmp	.+6      	; 0x94a <dtostrf+0x26>
 944:	51 95       	neg	r21
 946:	41 95       	neg	r20
 948:	51 09       	sbc	r21, r1
 94a:	e3 2e       	mov	r14, r19
 94c:	02 2f       	mov	r16, r18
 94e:	24 2f       	mov	r18, r20
 950:	ae 01       	movw	r20, r28
 952:	0e 94 b2 04 	call	0x964	; 0x964 <dtoa_prf>
 956:	ce 01       	movw	r24, r28
 958:	df 91       	pop	r29
 95a:	cf 91       	pop	r28
 95c:	1f 91       	pop	r17
 95e:	0f 91       	pop	r16
 960:	ef 90       	pop	r14
 962:	08 95       	ret

00000964 <dtoa_prf>:
 964:	a9 e0       	ldi	r26, 0x09	; 9
 966:	b0 e0       	ldi	r27, 0x00	; 0
 968:	e8 eb       	ldi	r30, 0xB8	; 184
 96a:	f4 e0       	ldi	r31, 0x04	; 4
 96c:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <__prologue_saves__+0xc>
 970:	6a 01       	movw	r12, r20
 972:	12 2f       	mov	r17, r18
 974:	b0 2e       	mov	r11, r16
 976:	2b e3       	ldi	r18, 0x3B	; 59
 978:	20 17       	cp	r18, r16
 97a:	20 f0       	brcs	.+8      	; 0x984 <dtoa_prf+0x20>
 97c:	ff 24       	eor	r15, r15
 97e:	f3 94       	inc	r15
 980:	f0 0e       	add	r15, r16
 982:	02 c0       	rjmp	.+4      	; 0x988 <dtoa_prf+0x24>
 984:	2c e3       	ldi	r18, 0x3C	; 60
 986:	f2 2e       	mov	r15, r18
 988:	0f 2d       	mov	r16, r15
 98a:	27 e0       	ldi	r18, 0x07	; 7
 98c:	ae 01       	movw	r20, r28
 98e:	4f 5f       	subi	r20, 0xFF	; 255
 990:	5f 4f       	sbci	r21, 0xFF	; 255
 992:	0e 94 0c 06 	call	0xc18	; 0xc18 <__ftoa_engine>
 996:	bc 01       	movw	r22, r24
 998:	49 81       	ldd	r20, Y+1	; 0x01
 99a:	84 2f       	mov	r24, r20
 99c:	89 70       	andi	r24, 0x09	; 9
 99e:	81 30       	cpi	r24, 0x01	; 1
 9a0:	31 f0       	breq	.+12     	; 0x9ae <dtoa_prf+0x4a>
 9a2:	e1 fc       	sbrc	r14, 1
 9a4:	06 c0       	rjmp	.+12     	; 0x9b2 <dtoa_prf+0x4e>
 9a6:	e0 fe       	sbrs	r14, 0
 9a8:	06 c0       	rjmp	.+12     	; 0x9b6 <dtoa_prf+0x52>
 9aa:	90 e2       	ldi	r25, 0x20	; 32
 9ac:	05 c0       	rjmp	.+10     	; 0x9b8 <dtoa_prf+0x54>
 9ae:	9d e2       	ldi	r25, 0x2D	; 45
 9b0:	03 c0       	rjmp	.+6      	; 0x9b8 <dtoa_prf+0x54>
 9b2:	9b e2       	ldi	r25, 0x2B	; 43
 9b4:	01 c0       	rjmp	.+2      	; 0x9b8 <dtoa_prf+0x54>
 9b6:	90 e0       	ldi	r25, 0x00	; 0
 9b8:	5e 2d       	mov	r21, r14
 9ba:	50 71       	andi	r21, 0x10	; 16
 9bc:	43 ff       	sbrs	r20, 3
 9be:	3c c0       	rjmp	.+120    	; 0xa38 <dtoa_prf+0xd4>
 9c0:	91 11       	cpse	r25, r1
 9c2:	02 c0       	rjmp	.+4      	; 0x9c8 <dtoa_prf+0x64>
 9c4:	83 e0       	ldi	r24, 0x03	; 3
 9c6:	01 c0       	rjmp	.+2      	; 0x9ca <dtoa_prf+0x66>
 9c8:	84 e0       	ldi	r24, 0x04	; 4
 9ca:	81 17       	cp	r24, r17
 9cc:	18 f4       	brcc	.+6      	; 0x9d4 <dtoa_prf+0x70>
 9ce:	21 2f       	mov	r18, r17
 9d0:	28 1b       	sub	r18, r24
 9d2:	01 c0       	rjmp	.+2      	; 0x9d6 <dtoa_prf+0x72>
 9d4:	20 e0       	ldi	r18, 0x00	; 0
 9d6:	51 11       	cpse	r21, r1
 9d8:	0b c0       	rjmp	.+22     	; 0x9f0 <dtoa_prf+0x8c>
 9da:	f6 01       	movw	r30, r12
 9dc:	82 2f       	mov	r24, r18
 9de:	30 e2       	ldi	r19, 0x20	; 32
 9e0:	88 23       	and	r24, r24
 9e2:	19 f0       	breq	.+6      	; 0x9ea <dtoa_prf+0x86>
 9e4:	31 93       	st	Z+, r19
 9e6:	81 50       	subi	r24, 0x01	; 1
 9e8:	fb cf       	rjmp	.-10     	; 0x9e0 <dtoa_prf+0x7c>
 9ea:	c2 0e       	add	r12, r18
 9ec:	d1 1c       	adc	r13, r1
 9ee:	20 e0       	ldi	r18, 0x00	; 0
 9f0:	99 23       	and	r25, r25
 9f2:	29 f0       	breq	.+10     	; 0x9fe <dtoa_prf+0x9a>
 9f4:	d6 01       	movw	r26, r12
 9f6:	9c 93       	st	X, r25
 9f8:	f6 01       	movw	r30, r12
 9fa:	31 96       	adiw	r30, 0x01	; 1
 9fc:	6f 01       	movw	r12, r30
 9fe:	c6 01       	movw	r24, r12
 a00:	03 96       	adiw	r24, 0x03	; 3
 a02:	e2 fe       	sbrs	r14, 2
 a04:	0a c0       	rjmp	.+20     	; 0xa1a <dtoa_prf+0xb6>
 a06:	3e e4       	ldi	r19, 0x4E	; 78
 a08:	d6 01       	movw	r26, r12
 a0a:	3c 93       	st	X, r19
 a0c:	41 e4       	ldi	r20, 0x41	; 65
 a0e:	11 96       	adiw	r26, 0x01	; 1
 a10:	4c 93       	st	X, r20
 a12:	11 97       	sbiw	r26, 0x01	; 1
 a14:	12 96       	adiw	r26, 0x02	; 2
 a16:	3c 93       	st	X, r19
 a18:	06 c0       	rjmp	.+12     	; 0xa26 <dtoa_prf+0xc2>
 a1a:	3e e6       	ldi	r19, 0x6E	; 110
 a1c:	f6 01       	movw	r30, r12
 a1e:	30 83       	st	Z, r19
 a20:	41 e6       	ldi	r20, 0x61	; 97
 a22:	41 83       	std	Z+1, r20	; 0x01
 a24:	32 83       	std	Z+2, r19	; 0x02
 a26:	fc 01       	movw	r30, r24
 a28:	32 2f       	mov	r19, r18
 a2a:	40 e2       	ldi	r20, 0x20	; 32
 a2c:	33 23       	and	r19, r19
 a2e:	09 f4       	brne	.+2      	; 0xa32 <dtoa_prf+0xce>
 a30:	42 c0       	rjmp	.+132    	; 0xab6 <dtoa_prf+0x152>
 a32:	41 93       	st	Z+, r20
 a34:	31 50       	subi	r19, 0x01	; 1
 a36:	fa cf       	rjmp	.-12     	; 0xa2c <dtoa_prf+0xc8>
 a38:	42 ff       	sbrs	r20, 2
 a3a:	44 c0       	rjmp	.+136    	; 0xac4 <dtoa_prf+0x160>
 a3c:	91 11       	cpse	r25, r1
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <dtoa_prf+0xe0>
 a40:	83 e0       	ldi	r24, 0x03	; 3
 a42:	01 c0       	rjmp	.+2      	; 0xa46 <dtoa_prf+0xe2>
 a44:	84 e0       	ldi	r24, 0x04	; 4
 a46:	81 17       	cp	r24, r17
 a48:	18 f4       	brcc	.+6      	; 0xa50 <dtoa_prf+0xec>
 a4a:	21 2f       	mov	r18, r17
 a4c:	28 1b       	sub	r18, r24
 a4e:	01 c0       	rjmp	.+2      	; 0xa52 <dtoa_prf+0xee>
 a50:	20 e0       	ldi	r18, 0x00	; 0
 a52:	51 11       	cpse	r21, r1
 a54:	0b c0       	rjmp	.+22     	; 0xa6c <dtoa_prf+0x108>
 a56:	f6 01       	movw	r30, r12
 a58:	82 2f       	mov	r24, r18
 a5a:	30 e2       	ldi	r19, 0x20	; 32
 a5c:	88 23       	and	r24, r24
 a5e:	19 f0       	breq	.+6      	; 0xa66 <dtoa_prf+0x102>
 a60:	31 93       	st	Z+, r19
 a62:	81 50       	subi	r24, 0x01	; 1
 a64:	fb cf       	rjmp	.-10     	; 0xa5c <dtoa_prf+0xf8>
 a66:	c2 0e       	add	r12, r18
 a68:	d1 1c       	adc	r13, r1
 a6a:	20 e0       	ldi	r18, 0x00	; 0
 a6c:	99 23       	and	r25, r25
 a6e:	29 f0       	breq	.+10     	; 0xa7a <dtoa_prf+0x116>
 a70:	d6 01       	movw	r26, r12
 a72:	9c 93       	st	X, r25
 a74:	f6 01       	movw	r30, r12
 a76:	31 96       	adiw	r30, 0x01	; 1
 a78:	6f 01       	movw	r12, r30
 a7a:	c6 01       	movw	r24, r12
 a7c:	03 96       	adiw	r24, 0x03	; 3
 a7e:	e2 fe       	sbrs	r14, 2
 a80:	0b c0       	rjmp	.+22     	; 0xa98 <dtoa_prf+0x134>
 a82:	39 e4       	ldi	r19, 0x49	; 73
 a84:	d6 01       	movw	r26, r12
 a86:	3c 93       	st	X, r19
 a88:	3e e4       	ldi	r19, 0x4E	; 78
 a8a:	11 96       	adiw	r26, 0x01	; 1
 a8c:	3c 93       	st	X, r19
 a8e:	11 97       	sbiw	r26, 0x01	; 1
 a90:	36 e4       	ldi	r19, 0x46	; 70
 a92:	12 96       	adiw	r26, 0x02	; 2
 a94:	3c 93       	st	X, r19
 a96:	07 c0       	rjmp	.+14     	; 0xaa6 <dtoa_prf+0x142>
 a98:	39 e6       	ldi	r19, 0x69	; 105
 a9a:	f6 01       	movw	r30, r12
 a9c:	30 83       	st	Z, r19
 a9e:	3e e6       	ldi	r19, 0x6E	; 110
 aa0:	31 83       	std	Z+1, r19	; 0x01
 aa2:	36 e6       	ldi	r19, 0x66	; 102
 aa4:	32 83       	std	Z+2, r19	; 0x02
 aa6:	fc 01       	movw	r30, r24
 aa8:	32 2f       	mov	r19, r18
 aaa:	40 e2       	ldi	r20, 0x20	; 32
 aac:	33 23       	and	r19, r19
 aae:	19 f0       	breq	.+6      	; 0xab6 <dtoa_prf+0x152>
 ab0:	41 93       	st	Z+, r20
 ab2:	31 50       	subi	r19, 0x01	; 1
 ab4:	fb cf       	rjmp	.-10     	; 0xaac <dtoa_prf+0x148>
 ab6:	fc 01       	movw	r30, r24
 ab8:	e2 0f       	add	r30, r18
 aba:	f1 1d       	adc	r31, r1
 abc:	10 82       	st	Z, r1
 abe:	8e ef       	ldi	r24, 0xFE	; 254
 ac0:	9f ef       	ldi	r25, 0xFF	; 255
 ac2:	a6 c0       	rjmp	.+332    	; 0xc10 <dtoa_prf+0x2ac>
 ac4:	21 e0       	ldi	r18, 0x01	; 1
 ac6:	30 e0       	ldi	r19, 0x00	; 0
 ac8:	91 11       	cpse	r25, r1
 aca:	02 c0       	rjmp	.+4      	; 0xad0 <dtoa_prf+0x16c>
 acc:	20 e0       	ldi	r18, 0x00	; 0
 ace:	30 e0       	ldi	r19, 0x00	; 0
 ad0:	16 16       	cp	r1, r22
 ad2:	17 06       	cpc	r1, r23
 ad4:	1c f4       	brge	.+6      	; 0xadc <dtoa_prf+0x178>
 ad6:	fb 01       	movw	r30, r22
 ad8:	31 96       	adiw	r30, 0x01	; 1
 ada:	02 c0       	rjmp	.+4      	; 0xae0 <dtoa_prf+0x17c>
 adc:	e1 e0       	ldi	r30, 0x01	; 1
 ade:	f0 e0       	ldi	r31, 0x00	; 0
 ae0:	2e 0f       	add	r18, r30
 ae2:	3f 1f       	adc	r19, r31
 ae4:	bb 20       	and	r11, r11
 ae6:	21 f0       	breq	.+8      	; 0xaf0 <dtoa_prf+0x18c>
 ae8:	eb 2d       	mov	r30, r11
 aea:	f0 e0       	ldi	r31, 0x00	; 0
 aec:	31 96       	adiw	r30, 0x01	; 1
 aee:	02 c0       	rjmp	.+4      	; 0xaf4 <dtoa_prf+0x190>
 af0:	e0 e0       	ldi	r30, 0x00	; 0
 af2:	f0 e0       	ldi	r31, 0x00	; 0
 af4:	2e 0f       	add	r18, r30
 af6:	3f 1f       	adc	r19, r31
 af8:	e1 2f       	mov	r30, r17
 afa:	f0 e0       	ldi	r31, 0x00	; 0
 afc:	2e 17       	cp	r18, r30
 afe:	3f 07       	cpc	r19, r31
 b00:	1c f4       	brge	.+6      	; 0xb08 <dtoa_prf+0x1a4>
 b02:	12 1b       	sub	r17, r18
 b04:	21 2f       	mov	r18, r17
 b06:	01 c0       	rjmp	.+2      	; 0xb0a <dtoa_prf+0x1a6>
 b08:	20 e0       	ldi	r18, 0x00	; 0
 b0a:	8e 2d       	mov	r24, r14
 b0c:	88 71       	andi	r24, 0x18	; 24
 b0e:	59 f4       	brne	.+22     	; 0xb26 <dtoa_prf+0x1c2>
 b10:	f6 01       	movw	r30, r12
 b12:	82 2f       	mov	r24, r18
 b14:	30 e2       	ldi	r19, 0x20	; 32
 b16:	88 23       	and	r24, r24
 b18:	19 f0       	breq	.+6      	; 0xb20 <dtoa_prf+0x1bc>
 b1a:	31 93       	st	Z+, r19
 b1c:	81 50       	subi	r24, 0x01	; 1
 b1e:	fb cf       	rjmp	.-10     	; 0xb16 <dtoa_prf+0x1b2>
 b20:	c2 0e       	add	r12, r18
 b22:	d1 1c       	adc	r13, r1
 b24:	20 e0       	ldi	r18, 0x00	; 0
 b26:	99 23       	and	r25, r25
 b28:	29 f0       	breq	.+10     	; 0xb34 <dtoa_prf+0x1d0>
 b2a:	d6 01       	movw	r26, r12
 b2c:	9c 93       	st	X, r25
 b2e:	f6 01       	movw	r30, r12
 b30:	31 96       	adiw	r30, 0x01	; 1
 b32:	6f 01       	movw	r12, r30
 b34:	51 11       	cpse	r21, r1
 b36:	0b c0       	rjmp	.+22     	; 0xb4e <dtoa_prf+0x1ea>
 b38:	f6 01       	movw	r30, r12
 b3a:	82 2f       	mov	r24, r18
 b3c:	90 e3       	ldi	r25, 0x30	; 48
 b3e:	88 23       	and	r24, r24
 b40:	19 f0       	breq	.+6      	; 0xb48 <dtoa_prf+0x1e4>
 b42:	91 93       	st	Z+, r25
 b44:	81 50       	subi	r24, 0x01	; 1
 b46:	fb cf       	rjmp	.-10     	; 0xb3e <dtoa_prf+0x1da>
 b48:	c2 0e       	add	r12, r18
 b4a:	d1 1c       	adc	r13, r1
 b4c:	20 e0       	ldi	r18, 0x00	; 0
 b4e:	0f 2d       	mov	r16, r15
 b50:	06 0f       	add	r16, r22
 b52:	9a 81       	ldd	r25, Y+2	; 0x02
 b54:	34 2f       	mov	r19, r20
 b56:	30 71       	andi	r19, 0x10	; 16
 b58:	44 ff       	sbrs	r20, 4
 b5a:	03 c0       	rjmp	.+6      	; 0xb62 <dtoa_prf+0x1fe>
 b5c:	91 33       	cpi	r25, 0x31	; 49
 b5e:	09 f4       	brne	.+2      	; 0xb62 <dtoa_prf+0x1fe>
 b60:	01 50       	subi	r16, 0x01	; 1
 b62:	10 16       	cp	r1, r16
 b64:	24 f4       	brge	.+8      	; 0xb6e <dtoa_prf+0x20a>
 b66:	09 30       	cpi	r16, 0x09	; 9
 b68:	18 f0       	brcs	.+6      	; 0xb70 <dtoa_prf+0x20c>
 b6a:	08 e0       	ldi	r16, 0x08	; 8
 b6c:	01 c0       	rjmp	.+2      	; 0xb70 <dtoa_prf+0x20c>
 b6e:	01 e0       	ldi	r16, 0x01	; 1
 b70:	ab 01       	movw	r20, r22
 b72:	77 ff       	sbrs	r23, 7
 b74:	02 c0       	rjmp	.+4      	; 0xb7a <dtoa_prf+0x216>
 b76:	40 e0       	ldi	r20, 0x00	; 0
 b78:	50 e0       	ldi	r21, 0x00	; 0
 b7a:	fb 01       	movw	r30, r22
 b7c:	e4 1b       	sub	r30, r20
 b7e:	f5 0b       	sbc	r31, r21
 b80:	a1 e0       	ldi	r26, 0x01	; 1
 b82:	b0 e0       	ldi	r27, 0x00	; 0
 b84:	ac 0f       	add	r26, r28
 b86:	bd 1f       	adc	r27, r29
 b88:	ea 0f       	add	r30, r26
 b8a:	fb 1f       	adc	r31, r27
 b8c:	8e e2       	ldi	r24, 0x2E	; 46
 b8e:	a8 2e       	mov	r10, r24
 b90:	4b 01       	movw	r8, r22
 b92:	80 1a       	sub	r8, r16
 b94:	91 08       	sbc	r9, r1
 b96:	0b 2d       	mov	r16, r11
 b98:	10 e0       	ldi	r17, 0x00	; 0
 b9a:	11 95       	neg	r17
 b9c:	01 95       	neg	r16
 b9e:	11 09       	sbc	r17, r1
 ba0:	4f 3f       	cpi	r20, 0xFF	; 255
 ba2:	bf ef       	ldi	r27, 0xFF	; 255
 ba4:	5b 07       	cpc	r21, r27
 ba6:	21 f4       	brne	.+8      	; 0xbb0 <dtoa_prf+0x24c>
 ba8:	d6 01       	movw	r26, r12
 baa:	ac 92       	st	X, r10
 bac:	11 96       	adiw	r26, 0x01	; 1
 bae:	6d 01       	movw	r12, r26
 bb0:	64 17       	cp	r22, r20
 bb2:	75 07       	cpc	r23, r21
 bb4:	2c f0       	brlt	.+10     	; 0xbc0 <dtoa_prf+0x25c>
 bb6:	84 16       	cp	r8, r20
 bb8:	95 06       	cpc	r9, r21
 bba:	14 f4       	brge	.+4      	; 0xbc0 <dtoa_prf+0x25c>
 bbc:	81 81       	ldd	r24, Z+1	; 0x01
 bbe:	01 c0       	rjmp	.+2      	; 0xbc2 <dtoa_prf+0x25e>
 bc0:	80 e3       	ldi	r24, 0x30	; 48
 bc2:	41 50       	subi	r20, 0x01	; 1
 bc4:	51 09       	sbc	r21, r1
 bc6:	31 96       	adiw	r30, 0x01	; 1
 bc8:	d6 01       	movw	r26, r12
 bca:	11 96       	adiw	r26, 0x01	; 1
 bcc:	7d 01       	movw	r14, r26
 bce:	40 17       	cp	r20, r16
 bd0:	51 07       	cpc	r21, r17
 bd2:	24 f0       	brlt	.+8      	; 0xbdc <dtoa_prf+0x278>
 bd4:	d6 01       	movw	r26, r12
 bd6:	8c 93       	st	X, r24
 bd8:	67 01       	movw	r12, r14
 bda:	e2 cf       	rjmp	.-60     	; 0xba0 <dtoa_prf+0x23c>
 bdc:	64 17       	cp	r22, r20
 bde:	75 07       	cpc	r23, r21
 be0:	39 f4       	brne	.+14     	; 0xbf0 <dtoa_prf+0x28c>
 be2:	96 33       	cpi	r25, 0x36	; 54
 be4:	20 f4       	brcc	.+8      	; 0xbee <dtoa_prf+0x28a>
 be6:	95 33       	cpi	r25, 0x35	; 53
 be8:	19 f4       	brne	.+6      	; 0xbf0 <dtoa_prf+0x28c>
 bea:	31 11       	cpse	r19, r1
 bec:	01 c0       	rjmp	.+2      	; 0xbf0 <dtoa_prf+0x28c>
 bee:	81 e3       	ldi	r24, 0x31	; 49
 bf0:	f6 01       	movw	r30, r12
 bf2:	80 83       	st	Z, r24
 bf4:	f7 01       	movw	r30, r14
 bf6:	82 2f       	mov	r24, r18
 bf8:	90 e2       	ldi	r25, 0x20	; 32
 bfa:	88 23       	and	r24, r24
 bfc:	19 f0       	breq	.+6      	; 0xc04 <dtoa_prf+0x2a0>
 bfe:	91 93       	st	Z+, r25
 c00:	81 50       	subi	r24, 0x01	; 1
 c02:	fb cf       	rjmp	.-10     	; 0xbfa <dtoa_prf+0x296>
 c04:	f7 01       	movw	r30, r14
 c06:	e2 0f       	add	r30, r18
 c08:	f1 1d       	adc	r31, r1
 c0a:	10 82       	st	Z, r1
 c0c:	80 e0       	ldi	r24, 0x00	; 0
 c0e:	90 e0       	ldi	r25, 0x00	; 0
 c10:	29 96       	adiw	r28, 0x09	; 9
 c12:	ec e0       	ldi	r30, 0x0C	; 12
 c14:	0c 94 06 07 	jmp	0xe0c	; 0xe0c <__epilogue_restores__+0xc>

00000c18 <__ftoa_engine>:
 c18:	28 30       	cpi	r18, 0x08	; 8
 c1a:	08 f0       	brcs	.+2      	; 0xc1e <__ftoa_engine+0x6>
 c1c:	27 e0       	ldi	r18, 0x07	; 7
 c1e:	33 27       	eor	r19, r19
 c20:	da 01       	movw	r26, r20
 c22:	99 0f       	add	r25, r25
 c24:	31 1d       	adc	r19, r1
 c26:	87 fd       	sbrc	r24, 7
 c28:	91 60       	ori	r25, 0x01	; 1
 c2a:	00 96       	adiw	r24, 0x00	; 0
 c2c:	61 05       	cpc	r22, r1
 c2e:	71 05       	cpc	r23, r1
 c30:	39 f4       	brne	.+14     	; 0xc40 <__ftoa_engine+0x28>
 c32:	32 60       	ori	r19, 0x02	; 2
 c34:	2e 5f       	subi	r18, 0xFE	; 254
 c36:	3d 93       	st	X+, r19
 c38:	30 e3       	ldi	r19, 0x30	; 48
 c3a:	2a 95       	dec	r18
 c3c:	e1 f7       	brne	.-8      	; 0xc36 <__ftoa_engine+0x1e>
 c3e:	08 95       	ret
 c40:	9f 3f       	cpi	r25, 0xFF	; 255
 c42:	30 f0       	brcs	.+12     	; 0xc50 <__ftoa_engine+0x38>
 c44:	80 38       	cpi	r24, 0x80	; 128
 c46:	71 05       	cpc	r23, r1
 c48:	61 05       	cpc	r22, r1
 c4a:	09 f0       	breq	.+2      	; 0xc4e <__ftoa_engine+0x36>
 c4c:	3c 5f       	subi	r19, 0xFC	; 252
 c4e:	3c 5f       	subi	r19, 0xFC	; 252
 c50:	3d 93       	st	X+, r19
 c52:	91 30       	cpi	r25, 0x01	; 1
 c54:	08 f0       	brcs	.+2      	; 0xc58 <__ftoa_engine+0x40>
 c56:	80 68       	ori	r24, 0x80	; 128
 c58:	91 1d       	adc	r25, r1
 c5a:	df 93       	push	r29
 c5c:	cf 93       	push	r28
 c5e:	1f 93       	push	r17
 c60:	0f 93       	push	r16
 c62:	ff 92       	push	r15
 c64:	ef 92       	push	r14
 c66:	19 2f       	mov	r17, r25
 c68:	98 7f       	andi	r25, 0xF8	; 248
 c6a:	96 95       	lsr	r25
 c6c:	e9 2f       	mov	r30, r25
 c6e:	96 95       	lsr	r25
 c70:	96 95       	lsr	r25
 c72:	e9 0f       	add	r30, r25
 c74:	ff 27       	eor	r31, r31
 c76:	e2 51       	subi	r30, 0x12	; 18
 c78:	ff 4f       	sbci	r31, 0xFF	; 255
 c7a:	99 27       	eor	r25, r25
 c7c:	33 27       	eor	r19, r19
 c7e:	ee 24       	eor	r14, r14
 c80:	ff 24       	eor	r15, r15
 c82:	a7 01       	movw	r20, r14
 c84:	e7 01       	movw	r28, r14
 c86:	05 90       	lpm	r0, Z+
 c88:	08 94       	sec
 c8a:	07 94       	ror	r0
 c8c:	28 f4       	brcc	.+10     	; 0xc98 <__ftoa_engine+0x80>
 c8e:	36 0f       	add	r19, r22
 c90:	e7 1e       	adc	r14, r23
 c92:	f8 1e       	adc	r15, r24
 c94:	49 1f       	adc	r20, r25
 c96:	51 1d       	adc	r21, r1
 c98:	66 0f       	add	r22, r22
 c9a:	77 1f       	adc	r23, r23
 c9c:	88 1f       	adc	r24, r24
 c9e:	99 1f       	adc	r25, r25
 ca0:	06 94       	lsr	r0
 ca2:	a1 f7       	brne	.-24     	; 0xc8c <__ftoa_engine+0x74>
 ca4:	05 90       	lpm	r0, Z+
 ca6:	07 94       	ror	r0
 ca8:	28 f4       	brcc	.+10     	; 0xcb4 <__ftoa_engine+0x9c>
 caa:	e7 0e       	add	r14, r23
 cac:	f8 1e       	adc	r15, r24
 cae:	49 1f       	adc	r20, r25
 cb0:	56 1f       	adc	r21, r22
 cb2:	c1 1d       	adc	r28, r1
 cb4:	77 0f       	add	r23, r23
 cb6:	88 1f       	adc	r24, r24
 cb8:	99 1f       	adc	r25, r25
 cba:	66 1f       	adc	r22, r22
 cbc:	06 94       	lsr	r0
 cbe:	a1 f7       	brne	.-24     	; 0xca8 <__ftoa_engine+0x90>
 cc0:	05 90       	lpm	r0, Z+
 cc2:	07 94       	ror	r0
 cc4:	28 f4       	brcc	.+10     	; 0xcd0 <__ftoa_engine+0xb8>
 cc6:	f8 0e       	add	r15, r24
 cc8:	49 1f       	adc	r20, r25
 cca:	56 1f       	adc	r21, r22
 ccc:	c7 1f       	adc	r28, r23
 cce:	d1 1d       	adc	r29, r1
 cd0:	88 0f       	add	r24, r24
 cd2:	99 1f       	adc	r25, r25
 cd4:	66 1f       	adc	r22, r22
 cd6:	77 1f       	adc	r23, r23
 cd8:	06 94       	lsr	r0
 cda:	a1 f7       	brne	.-24     	; 0xcc4 <__ftoa_engine+0xac>
 cdc:	05 90       	lpm	r0, Z+
 cde:	07 94       	ror	r0
 ce0:	20 f4       	brcc	.+8      	; 0xcea <__ftoa_engine+0xd2>
 ce2:	49 0f       	add	r20, r25
 ce4:	56 1f       	adc	r21, r22
 ce6:	c7 1f       	adc	r28, r23
 ce8:	d8 1f       	adc	r29, r24
 cea:	99 0f       	add	r25, r25
 cec:	66 1f       	adc	r22, r22
 cee:	77 1f       	adc	r23, r23
 cf0:	88 1f       	adc	r24, r24
 cf2:	06 94       	lsr	r0
 cf4:	a9 f7       	brne	.-22     	; 0xce0 <__ftoa_engine+0xc8>
 cf6:	84 91       	lpm	r24, Z
 cf8:	10 95       	com	r17
 cfa:	17 70       	andi	r17, 0x07	; 7
 cfc:	41 f0       	breq	.+16     	; 0xd0e <__ftoa_engine+0xf6>
 cfe:	d6 95       	lsr	r29
 d00:	c7 95       	ror	r28
 d02:	57 95       	ror	r21
 d04:	47 95       	ror	r20
 d06:	f7 94       	ror	r15
 d08:	e7 94       	ror	r14
 d0a:	1a 95       	dec	r17
 d0c:	c1 f7       	brne	.-16     	; 0xcfe <__ftoa_engine+0xe6>
 d0e:	e4 e9       	ldi	r30, 0x94	; 148
 d10:	f0 e0       	ldi	r31, 0x00	; 0
 d12:	68 94       	set
 d14:	15 90       	lpm	r1, Z+
 d16:	15 91       	lpm	r17, Z+
 d18:	35 91       	lpm	r19, Z+
 d1a:	65 91       	lpm	r22, Z+
 d1c:	95 91       	lpm	r25, Z+
 d1e:	05 90       	lpm	r0, Z+
 d20:	7f e2       	ldi	r23, 0x2F	; 47
 d22:	73 95       	inc	r23
 d24:	e1 18       	sub	r14, r1
 d26:	f1 0a       	sbc	r15, r17
 d28:	43 0b       	sbc	r20, r19
 d2a:	56 0b       	sbc	r21, r22
 d2c:	c9 0b       	sbc	r28, r25
 d2e:	d0 09       	sbc	r29, r0
 d30:	c0 f7       	brcc	.-16     	; 0xd22 <__ftoa_engine+0x10a>
 d32:	e1 0c       	add	r14, r1
 d34:	f1 1e       	adc	r15, r17
 d36:	43 1f       	adc	r20, r19
 d38:	56 1f       	adc	r21, r22
 d3a:	c9 1f       	adc	r28, r25
 d3c:	d0 1d       	adc	r29, r0
 d3e:	7e f4       	brtc	.+30     	; 0xd5e <__ftoa_engine+0x146>
 d40:	70 33       	cpi	r23, 0x30	; 48
 d42:	11 f4       	brne	.+4      	; 0xd48 <__ftoa_engine+0x130>
 d44:	8a 95       	dec	r24
 d46:	e6 cf       	rjmp	.-52     	; 0xd14 <__ftoa_engine+0xfc>
 d48:	e8 94       	clt
 d4a:	01 50       	subi	r16, 0x01	; 1
 d4c:	30 f0       	brcs	.+12     	; 0xd5a <__ftoa_engine+0x142>
 d4e:	08 0f       	add	r16, r24
 d50:	0a f4       	brpl	.+2      	; 0xd54 <__ftoa_engine+0x13c>
 d52:	00 27       	eor	r16, r16
 d54:	02 17       	cp	r16, r18
 d56:	08 f4       	brcc	.+2      	; 0xd5a <__ftoa_engine+0x142>
 d58:	20 2f       	mov	r18, r16
 d5a:	23 95       	inc	r18
 d5c:	02 2f       	mov	r16, r18
 d5e:	7a 33       	cpi	r23, 0x3A	; 58
 d60:	28 f0       	brcs	.+10     	; 0xd6c <__ftoa_engine+0x154>
 d62:	79 e3       	ldi	r23, 0x39	; 57
 d64:	7d 93       	st	X+, r23
 d66:	2a 95       	dec	r18
 d68:	e9 f7       	brne	.-6      	; 0xd64 <__ftoa_engine+0x14c>
 d6a:	10 c0       	rjmp	.+32     	; 0xd8c <__ftoa_engine+0x174>
 d6c:	7d 93       	st	X+, r23
 d6e:	2a 95       	dec	r18
 d70:	89 f6       	brne	.-94     	; 0xd14 <__ftoa_engine+0xfc>
 d72:	06 94       	lsr	r0
 d74:	97 95       	ror	r25
 d76:	67 95       	ror	r22
 d78:	37 95       	ror	r19
 d7a:	17 95       	ror	r17
 d7c:	17 94       	ror	r1
 d7e:	e1 18       	sub	r14, r1
 d80:	f1 0a       	sbc	r15, r17
 d82:	43 0b       	sbc	r20, r19
 d84:	56 0b       	sbc	r21, r22
 d86:	c9 0b       	sbc	r28, r25
 d88:	d0 09       	sbc	r29, r0
 d8a:	98 f0       	brcs	.+38     	; 0xdb2 <__ftoa_engine+0x19a>
 d8c:	23 95       	inc	r18
 d8e:	7e 91       	ld	r23, -X
 d90:	73 95       	inc	r23
 d92:	7a 33       	cpi	r23, 0x3A	; 58
 d94:	08 f0       	brcs	.+2      	; 0xd98 <__ftoa_engine+0x180>
 d96:	70 e3       	ldi	r23, 0x30	; 48
 d98:	7c 93       	st	X, r23
 d9a:	20 13       	cpse	r18, r16
 d9c:	b8 f7       	brcc	.-18     	; 0xd8c <__ftoa_engine+0x174>
 d9e:	7e 91       	ld	r23, -X
 da0:	70 61       	ori	r23, 0x10	; 16
 da2:	7d 93       	st	X+, r23
 da4:	30 f0       	brcs	.+12     	; 0xdb2 <__ftoa_engine+0x19a>
 da6:	83 95       	inc	r24
 da8:	71 e3       	ldi	r23, 0x31	; 49
 daa:	7d 93       	st	X+, r23
 dac:	70 e3       	ldi	r23, 0x30	; 48
 dae:	2a 95       	dec	r18
 db0:	e1 f7       	brne	.-8      	; 0xdaa <__ftoa_engine+0x192>
 db2:	11 24       	eor	r1, r1
 db4:	ef 90       	pop	r14
 db6:	ff 90       	pop	r15
 db8:	0f 91       	pop	r16
 dba:	1f 91       	pop	r17
 dbc:	cf 91       	pop	r28
 dbe:	df 91       	pop	r29
 dc0:	99 27       	eor	r25, r25
 dc2:	87 fd       	sbrc	r24, 7
 dc4:	90 95       	com	r25
 dc6:	08 95       	ret

00000dc8 <__prologue_saves__>:
 dc8:	2f 92       	push	r2
 dca:	3f 92       	push	r3
 dcc:	4f 92       	push	r4
 dce:	5f 92       	push	r5
 dd0:	6f 92       	push	r6
 dd2:	7f 92       	push	r7
 dd4:	8f 92       	push	r8
 dd6:	9f 92       	push	r9
 dd8:	af 92       	push	r10
 dda:	bf 92       	push	r11
 ddc:	cf 92       	push	r12
 dde:	df 92       	push	r13
 de0:	ef 92       	push	r14
 de2:	ff 92       	push	r15
 de4:	0f 93       	push	r16
 de6:	1f 93       	push	r17
 de8:	cf 93       	push	r28
 dea:	df 93       	push	r29
 dec:	cd b7       	in	r28, 0x3d	; 61
 dee:	de b7       	in	r29, 0x3e	; 62
 df0:	ca 1b       	sub	r28, r26
 df2:	db 0b       	sbc	r29, r27
 df4:	0f b6       	in	r0, 0x3f	; 63
 df6:	f8 94       	cli
 df8:	de bf       	out	0x3e, r29	; 62
 dfa:	0f be       	out	0x3f, r0	; 63
 dfc:	cd bf       	out	0x3d, r28	; 61
 dfe:	09 94       	ijmp

00000e00 <__epilogue_restores__>:
 e00:	2a 88       	ldd	r2, Y+18	; 0x12
 e02:	39 88       	ldd	r3, Y+17	; 0x11
 e04:	48 88       	ldd	r4, Y+16	; 0x10
 e06:	5f 84       	ldd	r5, Y+15	; 0x0f
 e08:	6e 84       	ldd	r6, Y+14	; 0x0e
 e0a:	7d 84       	ldd	r7, Y+13	; 0x0d
 e0c:	8c 84       	ldd	r8, Y+12	; 0x0c
 e0e:	9b 84       	ldd	r9, Y+11	; 0x0b
 e10:	aa 84       	ldd	r10, Y+10	; 0x0a
 e12:	b9 84       	ldd	r11, Y+9	; 0x09
 e14:	c8 84       	ldd	r12, Y+8	; 0x08
 e16:	df 80       	ldd	r13, Y+7	; 0x07
 e18:	ee 80       	ldd	r14, Y+6	; 0x06
 e1a:	fd 80       	ldd	r15, Y+5	; 0x05
 e1c:	0c 81       	ldd	r16, Y+4	; 0x04
 e1e:	1b 81       	ldd	r17, Y+3	; 0x03
 e20:	aa 81       	ldd	r26, Y+2	; 0x02
 e22:	b9 81       	ldd	r27, Y+1	; 0x01
 e24:	ce 0f       	add	r28, r30
 e26:	d1 1d       	adc	r29, r1
 e28:	0f b6       	in	r0, 0x3f	; 63
 e2a:	f8 94       	cli
 e2c:	de bf       	out	0x3e, r29	; 62
 e2e:	0f be       	out	0x3f, r0	; 63
 e30:	cd bf       	out	0x3d, r28	; 61
 e32:	ed 01       	movw	r28, r26
 e34:	08 95       	ret

00000e36 <_exit>:
 e36:	f8 94       	cli

00000e38 <__stop_program>:
 e38:	ff cf       	rjmp	.-2      	; 0xe38 <__stop_program>
